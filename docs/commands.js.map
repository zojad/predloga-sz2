{"version":3,"file":"commands.js","mappings":"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","sources":["webpack://office-addin-taskpane-js/./src/commands/preposition.js","webpack://office-addin-taskpane-js/./src/commands/commands.js"],"sourcesContent":["/* global Office, Word */\r\n\r\nlet state = {\r\n  errors: []   // Array<{ range: Word.Range, suggestion: \"s\"|\"S\"|\"z\"|\"Z\" }>\r\n};\r\n\r\nconst HIGHLIGHT_COLOR = \"#FFC0CB\";\r\nconst NOTIF_ID        = \"noErrors\";\r\n\r\n// Helpers for ribbon notifications\r\nfunction clearNotification(id) {\r\n  if (Office.NotificationMessages?.deleteAsync) {\r\n    Office.NotificationMessages.deleteAsync(id);\r\n  }\r\n}\r\nfunction showNotification(id, opts) {\r\n  if (Office.NotificationMessages?.addAsync) {\r\n    Office.NotificationMessages.addAsync(id, opts);\r\n  }\r\n}\r\n\r\n/**\r\n * Decide “s” vs “z”:\r\n *  - unvoiced consonants (c,č,f,h,k,p,s,š,t) ⇒ \"s\"\r\n *  - otherwise ⇒ \"z\"\r\n */\r\nfunction determineCorrectPreposition(rawWord) {\r\n  if (!rawWord) return null;\r\n  const m = rawWord.normalize(\"NFC\").match(/[\\p{L}0-9]/u);\r\n  if (!m) return null;\r\n  const c = m[0].toLowerCase();\r\n  const unvoiced = new Set(['c','č','f','h','k','p','s','š','t']);\r\n  const digitMap = {\r\n    '1':'e','2':'d','3':'t','4':'š','5':'p',\r\n    '6':'š','7':'s','8':'o','9':'d','0':'n'\r\n  };\r\n  const key = /\\d/.test(c) ? digitMap[c] : c;\r\n  return unvoiced.has(key) ? \"s\" : \"z\";\r\n}\r\n\r\n// ─────────────────────────────────────────────────\r\n// 1) Check S/Z: ALWAYS reset & rescan on each click\r\n// ─────────────────────────────────────────────────\r\nexport async function checkDocumentText() {\r\n  // 1) clear notification & previous queue\r\n  clearNotification(NOTIF_ID);\r\n  state.errors = [];\r\n\r\n  try {\r\n    await Word.run(async context => {\r\n      // A) Clear any old highlights\r\n      const oldS = context.document.body.search(\"s\", { matchWholeWord: true, matchCase: false });\r\n      const oldZ = context.document.body.search(\"z\", { matchWholeWord: true, matchCase: false });\r\n      oldS.load(\"items\"); oldZ.load(\"items\");\r\n      await context.sync();\r\n      [...oldS.items, ...oldZ.items].forEach(r => r.font.highlightColor = null);\r\n      await context.sync();\r\n\r\n      // B) Find standalone \"s\" and \"z\"\r\n      const opts = { matchWholeWord: true, matchCase: false };\r\n      const sRes = context.document.body.search(\"s\", opts);\r\n      const zRes = context.document.body.search(\"z\", opts);\r\n      sRes.load(\"items\"); zRes.load(\"items\");\r\n      await context.sync();\r\n\r\n      // C) Filter to pure single-letter, sort in doc order\r\n      let all = [...sRes.items, ...zRes.items].filter(r => /^[sSzZ]$/.test(r.text.trim()));\r\n      all.sort((a, b) => a.compareLocationWith(b, Word.CompareLocation.start));\r\n\r\n      // D) Evaluate each candidate\r\n      for (const r of all) {\r\n        const raw = r.text.trim();\r\n        const actualLower = raw.toLowerCase();\r\n\r\n        const after = r.getRange(\"After\")\r\n                       .getNextTextRange([\" \", \"\\n\", \".\", \",\", \";\", \"?\", \"!\"], true);\r\n        after.load(\"text\");\r\n        await context.sync();\r\n        const nxt = after.text.trim();\r\n        if (!nxt) continue;\r\n\r\n        const expectedLower = determineCorrectPreposition(nxt);\r\n        if (!expectedLower || expectedLower === actualLower) continue;\r\n\r\n        // preserve case\r\n        const suggestion = raw === raw.toUpperCase()\r\n          ? expectedLower.toUpperCase()\r\n          : expectedLower;\r\n\r\n        // track, highlight & enqueue\r\n        context.trackedObjects.add(r);\r\n        r.font.highlightColor = HIGHLIGHT_COLOR;\r\n        state.errors.push({ range: r, suggestion });\r\n      }\r\n\r\n      await context.sync();\r\n\r\n      // E) Notify or select the very first mismatch\r\n      if (!state.errors.length) {\r\n        showNotification(NOTIF_ID, {\r\n          type: \"informationalMessage\",\r\n          message: \"✨ No mismatches!\",\r\n          icon: \"Icon.80x80\"\r\n        });\r\n      } else {\r\n        const first = state.errors[0].range;\r\n        context.trackedObjects.add(first);\r\n        first.select();\r\n        await context.sync();\r\n      }\r\n    });\r\n  } catch (e) {\r\n    console.error(\"checkDocumentText error\", e);\r\n    showNotification(NOTIF_ID, {\r\n      type: \"errorMessage\",\r\n      message: \"Check failed; please try again.\"\r\n    });\r\n  }\r\n}\r\n\r\n// ─────────────────────────────────────────────────\r\n// 2) Accept One: replace first queued mismatch & select next\r\n// ─────────────────────────────────────────────────\r\nexport async function acceptCurrentChange() {\r\n  if (!state.errors.length) return;\r\n  const { range, suggestion } = state.errors.shift();\r\n\r\n  await Word.run(async context => {\r\n    context.trackedObjects.add(range);\r\n    range.insertText(suggestion, Word.InsertLocation.replace);\r\n    range.font.highlightColor = null;\r\n\r\n    if (state.errors.length) {\r\n      const next = state.errors[0].range;\r\n      context.trackedObjects.add(next);\r\n      next.select();\r\n    }\r\n    await context.sync();\r\n  });\r\n}\r\n\r\n// ─────────────────────────────────────────────────\r\n// 3) Reject One: clear first queued mismatch & select next\r\n// ─────────────────────────────────────────────────\r\nexport async function rejectCurrentChange() {\r\n  if (!state.errors.length) return;\r\n  const { range } = state.errors.shift();\r\n\r\n  await Word.run(async context => {\r\n    context.trackedObjects.add(range);\r\n    range.font.highlightColor = null;\r\n\r\n    if (state.errors.length) {\r\n      const next = state.errors[0].range;\r\n      context.trackedObjects.add(next);\r\n      next.select();\r\n    }\r\n    await context.sync();\r\n  });\r\n}\r\n\r\n// ─────────────────────────────────────────────────\r\n// 4) Accept All: fresh search + replace every mismatch\r\n// ─────────────────────────────────────────────────\r\nexport async function acceptAllChanges() {\r\n  clearNotification(NOTIF_ID);\r\n\r\n  await Word.run(async context => {\r\n    const opts = { matchWholeWord: true, matchCase: false };\r\n    const sRes = context.document.body.search(\"s\", opts);\r\n    const zRes = context.document.body.search(\"z\", opts);\r\n    sRes.load(\"items\"); zRes.load(\"items\");\r\n    await context.sync();\r\n\r\n    let all = [...sRes.items, ...zRes.items].filter(r => /^[sSzZ]$/.test(r.text.trim()));\r\n    all.sort((a, b) => a.compareLocationWith(b, Word.CompareLocation.start));\r\n\r\n    for (const r of all) {\r\n      const raw = r.text.trim();\r\n      const actualLower = raw.toLowerCase();\r\n\r\n      const after = r.getRange(\"After\")\r\n                     .getNextTextRange([\" \", \"\\n\", \".\", \",\", \";\", \"?\", \"!\"], true);\r\n      after.load(\"text\");\r\n      await context.sync();\r\n      const nxt = after.text.trim();\r\n      if (!nxt) continue;\r\n\r\n      const expectedLower = determineCorrectPreposition(nxt);\r\n      if (!expectedLower || expectedLower === actualLower) continue;\r\n\r\n      const suggestion = raw === raw.toUpperCase()\r\n        ? expectedLower.toUpperCase()\r\n        : expectedLower;\r\n\r\n      r.insertText(suggestion, Word.InsertLocation.replace);\r\n      r.font.highlightColor = null;\r\n    }\r\n    await context.sync();\r\n  });\r\n\r\n  state.errors = [];\r\n  showNotification(NOTIF_ID, {\r\n    type: \"informationalMessage\",\r\n    message: \"Accepted all!\",\r\n    icon: \"Icon.80x80\"\r\n  });\r\n}\r\n\r\n// ─────────────────────────────────────────────────\r\n// 5) Reject All: fresh search + clear every highlight\r\n// ─────────────────────────────────────────────────\r\nexport async function rejectAllChanges() {\r\n  clearNotification(NOTIF_ID);\r\n\r\n  await Word.run(async context => {\r\n    const opts = { matchWholeWord: true, matchCase: false };\r\n    const sRes = context.document.body.search(\"s\", opts);\r\n    const zRes = context.document.body.search(\"z\", opts);\r\n    sRes.load(\"items\"); zRes.load(\"items\");\r\n    await context.sync();\r\n\r\n    let all = [...sRes.items, ...zRes.items].filter(r => /^[sSzZ]$/.test(r.text.trim()));\r\n    all.sort((a, b) => a.compareLocationWith(b, Word.CompareLocation.start));\r\n\r\n    for (const r of all) {\r\n      r.font.highlightColor = null;\r\n    }\r\n    await context.sync();\r\n  });\r\n\r\n  state.errors = [];\r\n  showNotification(NOTIF_ID, {\r\n    type: \"informationalMessage\",\r\n    message: \"Cleared all!\",\r\n    icon: \"Icon.80x80\"\r\n  });\r\n}\r\n\r\n","/* global document, Office */\nimport {\n  checkDocumentText,\n  acceptCurrentChange,\n  rejectCurrentChange,\n  acceptAllChanges,\n  rejectAllChanges\n} from \"./preposition.js\";\n\n// — Log immediately when the commands bundle loads —\nconsole.log(\"⭐ commands.js loaded\");\n\nOffice.onReady(info => {\n  console.log(\"▶️ Office.onReady\", info);\n\n  if (info.host === Office.HostType.Word) {\n    console.log(\"🔗 Associating actions…\");\n\n    Office.actions.associate(\"checkDocumentText\",   (...args) => {\n      console.log(\"▶️ OfficeAction invoked: checkDocumentText\", args);\n      return checkDocumentText(...args);\n    });\n\n    Office.actions.associate(\"acceptCurrentChange\", (...args) => {\n      console.log(\"▶️ OfficeAction invoked: acceptCurrentChange\", args);\n      return acceptCurrentChange(...args);\n    });\n\n    Office.actions.associate(\"rejectCurrentChange\", (...args) => {\n      console.log(\"▶️ OfficeAction invoked: rejectCurrentChange\", args);\n      return rejectCurrentChange(...args);\n    });\n\n    Office.actions.associate(\"acceptAllChanges\",    (...args) => {\n      console.log(\"▶️ OfficeAction invoked: acceptAllChanges\", args);\n      return acceptAllChanges(...args);\n    });\n\n    Office.actions.associate(\"rejectAllChanges\",    (...args) => {\n      console.log(\"▶️ OfficeAction invoked: rejectAllChanges\", args);\n      return rejectAllChanges(...args);\n    });\n\n    console.log(\"✅ Actions associated\");\n  }\n});\n"],"names":["state","errors","NOTIF_ID","clearNotification","id","Office","NotificationMessages","deleteAsync","showNotification","opts","addAsync","determineCorrectPreposition","rawWord","m","normalize","match","c","toLowerCase","unvoiced","Set","key","test","has","console","log","onReady","info","host","HostType","Word","actions","associate","_len","arguments","length","args","Array","_key","async","run","oldS","context","document","body","search","matchWholeWord","matchCase","oldZ","load","sync","items","forEach","r","font","highlightColor","sRes","zRes","all","filter","text","trim","sort","a","b","compareLocationWith","CompareLocation","start","raw","actualLower","after","getRange","getNextTextRange","nxt","expectedLower","suggestion","toUpperCase","trackedObjects","add","push","range","first","select","type","message","icon","e","error","checkDocumentText","_len2","_key2","shift","insertText","InsertLocation","replace","next","acceptCurrentChange","_len3","_key3","rejectCurrentChange","_len4","_key4","acceptAllChanges","_len5","_key5","rejectAllChanges"],"sourceRoot":""}