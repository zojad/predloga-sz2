{"version":3,"file":"commands.js","mappings":"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","sources":["webpack://office-addin-taskpane-js/./src/commands/commands.js"],"sourcesContent":["/* eslint-disable prettier/prettier */\n/* global Office, Word */\n\n// State management\nconst state = {\n  errors: [],\n  currentIndex: 0\n};\n\nOffice.onReady((info) => {\n  if (info.host === Office.HostType.Word) {\n    try {\n      Office.actions.associate(\"checkDocumentText\", checkDocumentText);\n      Office.actions.associate(\"acceptAllChanges\", acceptAllChanges);\n      Office.actions.associate(\"rejectAllChanges\", rejectAllChanges);\n      Office.actions.associate(\"acceptCurrentChange\", acceptCurrentChange);\n      Office.actions.associate(\"rejectCurrentChange\", rejectCurrentChange);\n    } catch (error) {\n      console.error(\"Function registration failed:\", error);\n    }\n  }\n});\n\n// Updated logic with numbers\nfunction determineCorrectPreposition(word) {\n  if (!word) return null;\n\n  const unvoicedConsonants = new Set(['c', 'č', 'f', 'h', 'k', 'p', 's', 'š', 't']);\n  const digitPronunciations = {\n    '1': 'e',  // ena\n    '2': 'd',  // dva\n    '3': 't',  // tri\n    '4': 'š',  // štiri\n    '5': 'p',  // pet\n    '6': 'š',  // šest\n    '7': 's',  // sedem\n    '8': 'o',  // osem\n    '9': 'd',  // devet\n    '0': 'n'   // nič\n  };\n\n  let firstChar = \"\";\n\n  for (const char of word) {\n    if (char.match(/[a-zA-ZčČšŠžŽ0-9]/)) {\n      firstChar = char.toLowerCase();\n      break;\n    }\n  }\n\n  if (!firstChar) return null;\n\n  if (/\\d/.test(firstChar)) {\n    const pronunciationStart = digitPronunciations[firstChar];\n    return unvoicedConsonants.has(pronunciationStart) ? \"s\" : \"z\";\n  }\n\n  return unvoicedConsonants.has(firstChar) ? \"s\" : \"z\";\n}\n\nasync function checkDocumentText() {\n  try {\n    await Word.run(async (context) => {\n      // Clear previous highlights\n      state.errors.forEach(err => {\n        err.range.font.highlightColor = null;\n      });\n      state.errors = [];\n      state.currentIndex = 0;\n\n      const searchOptions = { matchCase: false, matchWholeWord: true };\n      const sResults = context.document.body.search(\"s\", searchOptions);\n      const zResults = context.document.body.search(\"z\", searchOptions);\n      sResults.load(\"items\");\n      zResults.load(\"items\");\n      await context.sync();\n\n      const errors = [...sResults.items, ...zResults.items]\n        .filter(prep => ['s', 'z'].includes(prep.text.trim().toLowerCase()))\n        .map(prep => ({\n          prepositionRange: prep,\n          nextWordRange: prep.getNextTextRange(\"Word\")\n        }))\n        .filter(pair => {\n          pair.nextWordRange.load(\"text\");\n          return true;\n        });\n\n      await context.sync();\n\n      state.errors = errors\n        .map(({ prepositionRange, nextWordRange }) => {\n          const currentPrep = prepositionRange.text.trim().toLowerCase();\n          const correctPrep = determineCorrectPreposition(nextWordRange.text.trim());\n          return correctPrep && currentPrep !== correctPrep ? {\n            range: prepositionRange,\n            suggestion: correctPrep,\n            following: nextWordRange.text.trim()\n          } : null;\n        })\n        .filter(Boolean);\n\n      state.errors.forEach(err => {\n        err.range.font.highlightColor = \"Yellow\";\n      });\n\n      await context.sync();\n\n      if (state.errors.length > 0) {\n        state.errors[0].range.select();\n      } else {\n        context.document.body.insertComment(\"No preposition errors found.\", \"start\");\n      }\n    });\n  } catch (error) {\n    console.error(\"Document check failed:\", error);\n  }\n}\n\nasync function acceptCurrentChange() {\n  if (state.currentIndex >= state.errors.length) return;\n\n  try {\n    await Word.run(async (context) => {\n      const err = state.errors[state.currentIndex];\n      err.range.insertText(err.suggestion, Word.InsertLocation.replace);\n      err.range.font.highlightColor = null;\n      await context.sync();\n      state.currentIndex++;\n\n      if (state.currentIndex < state.errors.length) {\n        state.errors[state.currentIndex].range.select();\n      }\n    });\n  } catch (error) {\n    console.error(\"Failed to accept change:\", error);\n  }\n}\n\nasync function rejectCurrentChange() {\n  if (state.currentIndex >= state.errors.length) return;\n\n  try {\n    await Word.run(async (context) => {\n      const err = state.errors[state.currentIndex];\n      err.range.font.highlightColor = null;\n      await context.sync();\n      state.currentIndex++;\n\n      if (state.currentIndex < state.errors.length) {\n        state.errors[state.currentIndex].range.select();\n      }\n    });\n  } catch (error) {\n    console.error(\"Failed to reject change:\", error);\n  }\n}\n\nasync function acceptAllChanges() {\n  if (state.errors.length === 0) return;\n\n  try {\n    await Word.run(async (context) => {\n      for (const err of state.errors) {\n        err.range.insertText(err.suggestion, Word.InsertLocation.replace);\n        err.range.font.highlightColor = null;\n      }\n      await context.sync();\n      state.errors = [];\n    });\n  } catch (error) {\n    console.error(\"Failed to accept all changes:\", error);\n  }\n}\n\nasync function rejectAllChanges() {\n  if (state.errors.length === 0) return;\n\n  try {\n    await Word.run(async (context) => {\n      for (const err of state.errors) {\n        err.range.font.highlightColor = null;\n      }\n      await context.sync();\n      state.errors = [];\n    });\n  } catch (error) {\n    console.error(\"Failed to reject all changes:\", error);\n  }\n}\n\n// For manual button wiring via HTML (if needed)\nwindow.checkDocumentText = checkDocumentText;\nwindow.acceptAllChanges = acceptAllChanges;\nwindow.rejectAllChanges = rejectAllChanges;\nwindow.acceptCurrentChange = acceptCurrentChange;\nwindow.rejectCurrentChange = rejectCurrentChange;\n\n"],"names":["state","errors","currentIndex","async","checkDocumentText","Word","run","forEach","err","range","font","highlightColor","searchOptions","matchCase","matchWholeWord","sResults","context","document","body","search","zResults","load","sync","items","filter","prep","includes","text","trim","toLowerCase","map","prepositionRange","nextWordRange","getNextTextRange","pair","_ref","currentPrep","correctPrep","word","unvoicedConsonants","Set","digitPronunciations","firstChar","char","match","test","pronunciationStart","has","determineCorrectPreposition","suggestion","following","Boolean","length","select","insertComment","error","console","acceptCurrentChange","insertText","InsertLocation","replace","rejectCurrentChange","acceptAllChanges","rejectAllChanges","Office","onReady","info","host","HostType","actions","associate","window"],"sourceRoot":""}