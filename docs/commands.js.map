{"version":3,"file":"commands.js","mappings":"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","sources":["webpack://office-addin-taskpane-js/./src/commands/commands.js"],"sourcesContent":["/* global Office, Word */\n\n// Helper wrappers for NotificationMessages (guard against undefined)\nfunction clearNotification(id) {\n  if (\n    Office.NotificationMessages &&\n    typeof Office.NotificationMessages.deleteAsync === \"function\"\n  ) {\n    Office.NotificationMessages.deleteAsync(id);\n  }\n}\n\nfunction showNotification(id, options) {\n  if (\n    Office.NotificationMessages &&\n    typeof Office.NotificationMessages.addAsync === \"function\"\n  ) {\n    Office.NotificationMessages.addAsync(id, options);\n  }\n}\n\n// State for errors and control flow\nconst state = {\n  errors: [],\n  currentIndex: 0,\n  isChecking: false\n};\n\n// Highlight color for detected errors: light pink\nconst HIGHLIGHT_COLOR = \"#FFC0CB\";\nconst NOTIF_ID = \"noErrors\";\n\nOffice.onReady((info) => {\n  if (info.host === Office.HostType.Word) {\n    try {\n      Office.actions.associate(\"checkDocumentText\", checkDocumentText);\n      Office.actions.associate(\"acceptAllChanges\", acceptAllChanges);\n      Office.actions.associate(\"rejectAllChanges\", rejectAllChanges);\n      Office.actions.associate(\"acceptCurrentChange\", acceptCurrentChange);\n      Office.actions.associate(\"rejectCurrentChange\", rejectCurrentChange);\n    } catch (error) {\n      console.error(\"Function registration failed:\", error);\n      showNotification(\"regError\", {\n        type: \"errorMessage\",\n        message: \"Add-in initialization failed. Please reload.\",\n        persistent: false\n      });\n    }\n  }\n});\n\n// Map a raw word (letter or digit start) to the correct 's' or 'z'\nfunction determineCorrectPreposition(rawWord) {\n  if (!rawWord) return null;\n  // Normalize accents\n  const word = rawWord.normalize(\"NFC\");\n  // Just take the first character\n  const firstChar = word.charAt(0).toLowerCase();\n\n  const unvoiced = new Set(['c','č','f','h','k','p','s','š','t']);\n  const numPron = {\n    '1':'e','2':'d','3':'t','4':'š','5':'p',\n    '6':'š','7':'s','8':'o','9':'d','0':'n'\n  };\n\n  // digit?\n  if (firstChar >= '0' && firstChar <= '9') {\n    const pron = numPron[firstChar];\n    return unvoiced.has(pron) ? 's' : 'z';\n  }\n\n  // letter\n  return unvoiced.has(firstChar) ? 's' : 'z';\n}\n\n// Main scan: highlight mismatches, or notify if none\nasync function checkDocumentText() {\n  if (state.isChecking) return;\n  state.isChecking = true;\n  clearNotification(NOTIF_ID);\n\n  try {\n    await Word.run(async (context) => {\n      // Clear previous highlights\n      state.errors.forEach(e => e.range.font.highlightColor = null);\n      state.errors = [];\n      state.currentIndex = 0;\n\n      const searchOptions = { matchCase: false, matchWholeWord: true };\n      let allRanges = [];\n\n      // helper: find standalone 's' or 'z'\n      async function addSearchResults(scope) {\n        const res = scope.search(\"\\\\b[sz]\\\\b\", searchOptions);\n        res.load(\"items\");\n        await context.sync();\n        allRanges.push(...res.items);\n      }\n\n      // Only scan the body (skip headers/footers)\n      await addSearchResults(context.document.body);\n\n      // Filter exactly \"s\"/\"z\"\n      const candidates = allRanges.filter(r =>\n        [\"s\",\"z\"].includes(r.text.trim().toLowerCase())\n      );\n\n      const errors = [];\n      for (const prep of candidates) {\n        const after = prep.getRange(\"After\");\n        after.expandTo(Word.TextRangeUnit.word);\n        after.load(\"text\");\n        await context.sync();\n\n        const nextWord = after.text.trim();\n        if (!nextWord) continue;\n\n        const curr = prep.text.trim().toLowerCase();\n        const corr = determineCorrectPreposition(nextWord);\n        if (corr && curr !== corr) {\n          errors.push({ range: prep, suggestion: corr });\n        }\n      }\n\n      state.errors = errors;\n\n      if (errors.length === 0) {\n        showNotification(NOTIF_ID, {\n          type: \"informationalMessage\",\n          message: \"🎉 Ni najdenih napak.\",\n          icon: \"Icon.80x80\",\n          persistent: false\n        });\n        return;\n      }\n\n      // Highlight errors and select the first one\n      for (const e of errors) {\n        e.range.font.highlightColor = HIGHLIGHT_COLOR;\n      }\n      await context.sync();\n\n      errors[0].range.select();\n      await context.sync();\n    });\n  } catch (e) {\n    console.error(\"checkDocumentText failed:\", e);\n    showNotification(\"checkError\", {\n      type: \"errorMessage\",\n      message: \"Preposition check failed. Please try again.\",\n      persistent: false\n    });\n  } finally {\n    state.isChecking = false;\n  }\n}\n\n// Accept/reject functions\nasync function acceptCurrentChange() {\n  if (state.currentIndex >= state.errors.length) return;\n  try {\n    await Word.run(async (context) => {\n      const err = state.errors[state.currentIndex];\n      err.range.insertText(err.suggestion, Word.InsertLocation.replace);\n      err.range.font.highlightColor = null;\n      await context.sync();\n\n      state.currentIndex++;\n      if (state.currentIndex < state.errors.length) {\n        state.errors[state.currentIndex].range.select();\n        await context.sync();\n      }\n    });\n  } catch (e) {\n    console.error(\"acceptCurrentChange failed:\", e);\n    showNotification(\"acceptError\", {\n      type: \"errorMessage\",\n      message: \"Failed to apply change. Please re-run the check.\",\n      persistent: false\n    });\n  }\n}\n\nasync function rejectCurrentChange() {\n  if (state.currentIndex >= state.errors.length) return;\n  try {\n    await Word.run(async (context) => {\n      const err = state.errors[state.currentIndex];\n      err.range.font.highlightColor = null;\n      await context.sync();\n\n      state.currentIndex++;\n      if (state.currentIndex < state.errors.length) {\n        state.errors[state.currentIndex].range.select();\n        await context.sync();\n      }\n    });\n  } catch (e) {\n    console.error(\"rejectCurrentChange failed:\", e);\n    showNotification(\"rejectError\", {\n      type: \"errorMessage\",\n      message: \"Failed to reject change. Please re-run the check.\",\n      persistent: false\n    });\n  }\n}\n\nasync function acceptAllChanges() {\n  if (!state.errors.length) return;\n  try {\n    await Word.run(async (context) => {\n      for (const err of state.errors) {\n        err.range.insertText(err.suggestion, Word.InsertLocation.replace);\n        err.range.font.highlightColor = null;\n      }\n      await context.sync();\n      state.errors = [];\n    });\n  } catch (e) {\n    console.error(\"acceptAllChanges failed:\", e);\n    showNotification(\"acceptAllError\", {\n      type: \"errorMessage\",\n      message: \"Failed to apply all changes. Please try again.\",\n      persistent: false\n    });\n  }\n}\n\nasync function rejectAllChanges() {\n  if (!state.errors.length) return;\n  try {\n    await Word.run(async (context) => {\n      for (const err of state.errors) {\n        err.range.font.highlightColor = null;\n      }\n      await context.sync();\n      state.errors = [];\n    });\n  } catch (e) {\n    console.error(\"rejectAllChanges failed:\", e);\n    showNotification(\"rejectAllError\", {\n      type: \"errorMessage\",\n      message: \"Failed to clear changes. Please try again.\",\n      persistent: false\n    });\n  }\n}\n\n// Expose to ribbon/UI\nwindow.checkDocumentText   = checkDocumentText;\nwindow.acceptCurrentChange = acceptCurrentChange;\nwindow.rejectCurrentChange = rejectCurrentChange;\nwindow.acceptAllChanges    = acceptAllChanges;\nwindow.rejectAllChanges    = rejectAllChanges;\n"],"names":["showNotification","id","options","Office","NotificationMessages","addAsync","state","errors","currentIndex","isChecking","NOTIF_ID","determineCorrectPreposition","rawWord","firstChar","normalize","charAt","toLowerCase","unvoiced","Set","pron","has","async","checkDocumentText","deleteAsync","Word","run","forEach","e","range","font","highlightColor","searchOptions","matchCase","matchWholeWord","allRanges","scope","res","search","load","context","sync","push","items","addSearchResults","document","body","candidates","filter","r","includes","text","trim","prep","after","getRange","expandTo","TextRangeUnit","word","nextWord","curr","corr","suggestion","length","select","type","message","icon","persistent","console","error","acceptCurrentChange","err","insertText","InsertLocation","replace","rejectCurrentChange","acceptAllChanges","rejectAllChanges","onReady","info","host","HostType","actions","associate","window"],"sourceRoot":""}