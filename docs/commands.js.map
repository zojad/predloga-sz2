{"version":3,"file":"commands.js","mappings":"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","sources":["webpack://office-addin-taskpane-js/./src/commands/preposition.js","webpack://office-addin-taskpane-js/./src/commands/commands.js"],"sourcesContent":["/* global Office, Word */\r\n\r\nlet state = {\r\n  errors: [],         // { range: Word.Range, suggestion: \"s\"|\"z\" }[]\r\n  currentIndex: 0,\r\n  isChecking: false\r\n};\r\n\r\nconst HIGHLIGHT_COLOR = \"#FFC0CB\";\r\nconst NOTIF_ID        = \"noErrors\";\r\n\r\nfunction clearNotification(id) {\r\n  if (Office.NotificationMessages && typeof Office.NotificationMessages.deleteAsync === \"function\") {\r\n    Office.NotificationMessages.deleteAsync(id);\r\n  }\r\n}\r\nfunction showNotification(id, options) {\r\n  if (Office.NotificationMessages && typeof Office.NotificationMessages.addAsync === \"function\") {\r\n    Office.NotificationMessages.addAsync(id, options);\r\n  }\r\n}\r\n\r\nfunction determineCorrectPreposition(rawWord) {\r\n  if (!rawWord) return null;\r\n  const match = rawWord.normalize(\"NFC\").match(/[\\p{L}0-9]/u);\r\n  if (!match) return null;\r\n  const first = match[0].toLowerCase();\r\n  const unvoiced = new Set(['c','č','f','h','k','p','s','š','t']);\r\n  const numMap   = {'1':'e','2':'d','3':'t','4':'š','5':'p','6':'š','7':'s','8':'o','9':'d','0':'n'};\r\n  return (/\\d/.test(first) ? unvoiced.has(numMap[first]) : unvoiced.has(first))\r\n    ? \"s\" : \"z\";\r\n}\r\n\r\n// ─────────────────────────────────────────────────\r\n// 1) Check S/Z: ALWAYS reset & rescan on each click\r\n// ─────────────────────────────────────────────────\r\nexport async function checkDocumentText() {\r\n  // **Reset** on every click:\r\n  clearNotification(NOTIF_ID);\r\n  state.errors.forEach(e => e.range.font.highlightColor = null);\r\n  state.errors = [];\r\n  state.currentIndex = 0;\r\n\r\n  if (state.isChecking) return;\r\n  state.isChecking = true;\r\n\r\n  try {\r\n    await Word.run(async context => {\r\n      // Clear previous highlights\r\n      state.errors.forEach(e => e.range.font.highlightColor = null);\r\n      state.errors = [];\r\n      state.currentIndex = 0;\r\n\r\n      const opts = { matchCase: false, matchWholeWord: true };\r\n      const sRes = context.document.body.search(\"s\", opts);\r\n      const zRes = context.document.body.search(\"z\", opts);\r\n      sRes.load(\"items\"); zRes.load(\"items\");\r\n      await context.sync();\r\n\r\n      const candidates = [...sRes.items, ...zRes.items]\r\n        .filter(r => [\"s\",\"z\"].includes(r.text.trim().toLowerCase()));\r\n\r\n      const errors = [];\r\n      for (const prep of candidates) {\r\n        const after = prep.getRange(\"After\");\r\n        const nxtR = after.getNextTextRange(\r\n          [\" \", \"\\n\", \".\", \",\", \";\", \"?\", \"!\"], \r\n          true\r\n        );\r\n        nxtR.load(\"text\");\r\n        await context.sync();\r\n\r\n        const nxt = nxtR.text.trim();\r\n        if (!nxt) continue;\r\n\r\n        const actual = prep.text.trim().toLowerCase();\r\n        const expect = determineCorrectPreposition(nxt);\r\n        if (expect && actual !== expect) {\r\n          errors.push({ range: prep, suggestion: expect });\r\n        }\r\n      }\r\n\r\n      state.errors = errors;\r\n\r\n      if (!errors.length) {\r\n        showNotification(NOTIF_ID, {\r\n          type: \"informationalMessage\",\r\n          message: \"✨ No 's'/'z' mismatches!\",\r\n          icon: \"Icon.80x80\",\r\n          persistent: false\r\n        });\r\n      } else {\r\n        errors.forEach(e => e.range.font.highlightColor = HIGHLIGHT_COLOR);\r\n        await context.sync();\r\n        errors[0].range.select();\r\n      }\r\n    });\r\n  } catch (e) {\r\n    console.error(\"checkDocumentText error\", e);\r\n    showNotification(\"checkError\", {\r\n      type: \"errorMessage\",\r\n      message: \"Check failed; please try again.\",\r\n      persistent: false\r\n    });\r\n  } finally {\r\n    state.isChecking = false;\r\n  }\r\n}\r\n\r\n// ─────────────────────────────────────────────────\r\n// 2) Accept One: replace current & auto-advance\r\n// ─────────────────────────────────────────────────\r\nexport async function acceptCurrentChange() {\r\n  if (state.currentIndex >= state.errors.length) return;\r\n\r\n  const err = state.errors[state.currentIndex];\r\n  try {\r\n    await Word.run(async context => {\r\n      context.trackedObjects.add(err.range);\r\n      err.range.insertText(err.suggestion, Word.InsertLocation.replace);\r\n      err.range.font.highlightColor = null;\r\n      await context.sync();\r\n\r\n      state.currentIndex++;\r\n      if (state.currentIndex < state.errors.length) {\r\n        state.errors[state.currentIndex].range.select();\r\n        await context.sync();\r\n      }\r\n    });\r\n  } catch (e) {\r\n    console.error(\"acceptCurrentChange error\", e);\r\n  }\r\n}\r\n\r\n// ─────────────────────────────────────────────────\r\n// 3) Reject One: clear current & auto-advance\r\n// ─────────────────────────────────────────────────\r\nexport async function rejectCurrentChange() {\r\n  if (state.currentIndex >= state.errors.length) return;\r\n\r\n  const err = state.errors[state.currentIndex];\r\n  try {\r\n    await Word.run(async context => {\r\n      context.trackedObjects.add(err.range);\r\n      err.range.font.highlightColor = null;\r\n      await context.sync();\r\n\r\n      state.currentIndex++;\r\n      if (state.currentIndex < state.errors.length) {\r\n        state.errors[state.currentIndex].range.select();\r\n        await context.sync();\r\n      }\r\n    });\r\n  } catch (e) {\r\n    console.error(\"rejectCurrentChange error\", e);\r\n  }\r\n}\r\n\r\n// ─────────────────────────────────────────────────\r\n// 4) Accept All: replace every mismatch at once\r\n// ─────────────────────────────────────────────────\r\nexport async function acceptAllChanges() {\r\n  if (!state.errors.length) return;\r\n  try {\r\n    await Word.run(async context => {\r\n      for (const err of state.errors) {\r\n        context.trackedObjects.add(err.range);\r\n        err.range.insertText(err.suggestion, Word.InsertLocation.replace);\r\n        err.range.font.highlightColor = null;\r\n      }\r\n      await context.sync();\r\n      state.errors = [];\r\n    });\r\n  } catch (e) {\r\n    console.error(\"acceptAllChanges error\", e);\r\n  }\r\n}\r\n\r\n// ─────────────────────────────────────────────────\r\n// 5) Reject All: clear all highlights at once\r\n// ─────────────────────────────────────────────────\r\nexport async function rejectAllChanges() {\r\n  if (!state.errors.length) return;\r\n  try {\r\n    await Word.run(async context => {\r\n      for (const err of state.errors) {\r\n        context.trackedObjects.add(err.range);\r\n        err.range.font.highlightColor = null;\r\n      }\r\n      await context.sync();\r\n      state.errors = [];\r\n    });\r\n  } catch (e) {\r\n    console.error(\"rejectAllChanges error\", e);\r\n  }\r\n}\r\n\r\n","/* global document, Office */\nimport {\n  checkDocumentText,\n  acceptCurrentChange,\n  rejectCurrentChange,\n  acceptAllChanges,\n  rejectAllChanges\n} from \"./preposition.js\";\n\n// — Log immediately when the commands bundle loads —\nconsole.log(\"⭐ commands.js loaded\");\n\nOffice.onReady(info => {\n  console.log(\"▶️ Office.onReady\", info);\n\n  if (info.host === Office.HostType.Word) {\n    console.log(\"🔗 Associating actions…\");\n\n    Office.actions.associate(\"checkDocumentText\",   (...args) => {\n      console.log(\"▶️ OfficeAction invoked: checkDocumentText\", args);\n      return checkDocumentText(...args);\n    });\n\n    Office.actions.associate(\"acceptCurrentChange\", (...args) => {\n      console.log(\"▶️ OfficeAction invoked: acceptCurrentChange\", args);\n      return acceptCurrentChange(...args);\n    });\n\n    Office.actions.associate(\"rejectCurrentChange\", (...args) => {\n      console.log(\"▶️ OfficeAction invoked: rejectCurrentChange\", args);\n      return rejectCurrentChange(...args);\n    });\n\n    Office.actions.associate(\"acceptAllChanges\",    (...args) => {\n      console.log(\"▶️ OfficeAction invoked: acceptAllChanges\", args);\n      return acceptAllChanges(...args);\n    });\n\n    Office.actions.associate(\"rejectAllChanges\",    (...args) => {\n      console.log(\"▶️ OfficeAction invoked: rejectAllChanges\", args);\n      return rejectAllChanges(...args);\n    });\n\n    console.log(\"✅ Actions associated\");\n  }\n});\n"],"names":["state","errors","currentIndex","isChecking","NOTIF_ID","showNotification","id","options","Office","NotificationMessages","addAsync","determineCorrectPreposition","rawWord","match","normalize","first","toLowerCase","unvoiced","Set","test","has","console","log","onReady","info","host","HostType","Word","actions","associate","_len","arguments","length","args","Array","_key","async","deleteAsync","forEach","e","range","font","highlightColor","run","opts","matchCase","matchWholeWord","sRes","context","document","body","search","zRes","load","sync","candidates","items","filter","r","includes","text","trim","prep","nxtR","getRange","getNextTextRange","nxt","actual","expect","push","suggestion","select","type","message","icon","persistent","error","checkDocumentText","_len2","_key2","err","trackedObjects","add","insertText","InsertLocation","replace","acceptCurrentChange","_len3","_key3","rejectCurrentChange","_len4","_key4","acceptAllChanges","_len5","_key5","rejectAllChanges"],"sourceRoot":""}