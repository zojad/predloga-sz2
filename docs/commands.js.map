{"version":3,"file":"commands.js","mappings":"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","sources":["webpack://office-addin-taskpane-js/./src/commands/preposition.js","webpack://office-addin-taskpane-js/./src/commands/commands.js"],"sourcesContent":["/* global Office, Word */\r\n\r\nconst state = {\r\n  errors: [],        // { range: Word.Range, suggestion: \"s\" | \"z\" }[]\r\n  currentIndex: 0,\r\n  isChecking: false\r\n};\r\n\r\nconst HIGHLIGHT_COLOR = \"#FFC0CB\";\r\nconst NOTIF_ID        = \"noErrors\";\r\n\r\nfunction clearNotification(id) {\r\n  if (Office.NotificationMessages?.deleteAsync) {\r\n    Office.NotificationMessages.deleteAsync(id);\r\n  }\r\n}\r\nfunction showNotification(id, opts) {\r\n  if (Office.NotificationMessages?.addAsync) {\r\n    Office.NotificationMessages.addAsync(id, opts);\r\n  }\r\n}\r\n\r\n// Your existing next-letter logic, purely in JS:\r\nfunction determineCorrectPreposition(word) {\r\n  if (!word) return null;\r\n  const m = word.normalize(\"NFC\").match(/[\\p{L}0-9]/u);\r\n  if (!m) return null;\r\n  const first = m[0].toLowerCase();\r\n  const unvoiced = new Set(['c','č','f','h','k','p','s','š','t']);\r\n  const digitMap = { '1':'e','2':'d','3':'t','4':'š','5':'p','6':'š','7':'s','8':'o','9':'d','0':'n' };\r\n  const key = /\\d/.test(first) ? digitMap[first] : first;\r\n  return unvoiced.has(key) ? \"s\" : \"z\";\r\n}\r\n\r\n// ───────────────────────────────────────────────────\r\n// 1) checkDocumentText: find & highlight all mismatches\r\n// ───────────────────────────────────────────────────\r\nexport async function checkDocumentText() {\r\n  if (state.isChecking) return;\r\n  state.isChecking = true;\r\n  clearNotification(NOTIF_ID);\r\n\r\n  // reset\r\n  state.errors = [];\r\n  state.currentIndex = 0;\r\n\r\n  try {\r\n    await Word.run(async context => {\r\n      // 1. clear old highlights\r\n      state.errors.forEach(e => e.range.font.highlightColor = null);\r\n\r\n      // 2. search for standalone \"s\" or \"z\"\r\n      const opts = { matchWholeWord: true, matchCase: false };\r\n      const sRes = context.document.body.search(\"s\", opts);\r\n      const zRes = context.document.body.search(\"z\", opts);\r\n      sRes.load(\"items\"); zRes.load(\"items\");\r\n      await context.sync();\r\n\r\n      // filter to exactly \"s\"/\"z\", then find the next word after each\r\n      const candidates = [...sRes.items, ...zRes.items]\r\n        .filter(r => r.text.trim().toLowerCase() === \"s\" || r.text.trim().toLowerCase() === \"z\");\r\n\r\n      for (const r of candidates) {\r\n        // grab next word range\r\n        const after = r.getRange(\"After\")\r\n                       .getNextTextRange([\" \", \"\\n\", \".\", \",\", \";\", \"?\", \"!\"], true);\r\n        after.load(\"text\");\r\n        await context.sync();\r\n\r\n        const nextWord = after.text.trim();\r\n        if (!nextWord) continue;\r\n\r\n        const actual   = r.text.trim().toLowerCase();\r\n        const expected = determineCorrectPreposition(nextWord);\r\n        if (expected && actual !== expected) {\r\n          // track & highlight this mismatch\r\n          context.trackedObjects.add(r);\r\n          r.font.highlightColor = HIGHLIGHT_COLOR;\r\n          state.errors.push({ range: r, suggestion: expected });\r\n        }\r\n      }\r\n\r\n      if (!state.errors.length) {\r\n        showNotification(NOTIF_ID, {\r\n          type: \"informationalMessage\",\r\n          message: \"✨ No mismatches!\",\r\n          icon: \"Icon.80x80\"\r\n        });\r\n      } else {\r\n        // select the first\r\n        const first = state.errors[0].range;\r\n        context.trackedObjects.add(first);\r\n        first.select();\r\n        await context.sync();\r\n      }\r\n    });\r\n  } catch (e) {\r\n    console.error(e);\r\n    showNotification(NOTIF_ID, {\r\n      type: \"errorMessage\",\r\n      message: \"Check failed; please try again.\"\r\n    });\r\n  } finally {\r\n    state.isChecking = false;\r\n  }\r\n}\r\n\r\n\r\n// ───────────────────────────────────────────────────\r\n// 2) Accept current: replace, clear highlight, auto-advance\r\n// ───────────────────────────────────────────────────\r\nexport async function acceptCurrentChange() {\r\n  if (state.currentIndex >= state.errors.length) return;\r\n\r\n  const { range, suggestion } = state.errors[state.currentIndex];\r\n\r\n  try {\r\n    await Word.run(async context => {\r\n      context.trackedObjects.add(range);\r\n\r\n      // replace the single letter\r\n      range.insertText(suggestion, Word.InsertLocation.replace);\r\n      range.font.highlightColor = null;\r\n\r\n      // move to next\r\n      state.currentIndex++;\r\n      if (state.currentIndex < state.errors.length) {\r\n        const next = state.errors[state.currentIndex].range;\r\n        context.trackedObjects.add(next);\r\n        next.select();\r\n      }\r\n\r\n      await context.sync();\r\n    });\r\n\r\n    // remove the handled error from our list\r\n    state.errors.splice(state.currentIndex - 1, 1);\r\n    if (state.currentIndex > state.errors.length) {\r\n      state.currentIndex = 0;\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n}\r\n\r\n\r\n// ───────────────────────────────────────────────────\r\n// 3) Reject current: clear highlight, auto-advance\r\n// ───────────────────────────────────────────────────\r\nexport async function rejectCurrentChange() {\r\n  if (state.currentIndex >= state.errors.length) return;\r\n\r\n  const { range } = state.errors[state.currentIndex];\r\n\r\n  try {\r\n    await Word.run(async context => {\r\n      context.trackedObjects.add(range);\r\n\r\n      // just clear the highlight\r\n      range.font.highlightColor = null;\r\n\r\n      // move to next\r\n      state.currentIndex++;\r\n      if (state.currentIndex < state.errors.length) {\r\n        const next = state.errors[state.currentIndex].range;\r\n        context.trackedObjects.add(next);\r\n        next.select();\r\n      }\r\n\r\n      await context.sync();\r\n    });\r\n\r\n    // remove the skipped error\r\n    state.errors.splice(state.currentIndex - 1, 1);\r\n    if (state.currentIndex > state.errors.length) {\r\n      state.currentIndex = 0;\r\n    }\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n}\r\n\r\n\r\n// ───────────────────────────────────────────────────\r\n// 4) Accept all: replace every mismatch in one batch\r\n// ───────────────────────────────────────────────────\r\nexport async function acceptAllChanges() {\r\n  if (!state.errors.length) return;\r\n\r\n  try {\r\n    await Word.run(async context => {\r\n      // loop and replace/clear\r\n      for (const { range, suggestion } of state.errors) {\r\n        context.trackedObjects.add(range);\r\n        range.insertText(suggestion, Word.InsertLocation.replace);\r\n        range.font.highlightColor = null;\r\n      }\r\n      await context.sync();\r\n    });\r\n\r\n    // reset local state\r\n    state.errors = [];\r\n    state.currentIndex = 0;\r\n    showNotification(NOTIF_ID, {\r\n      type: \"informationalMessage\",\r\n      message: \"Accepted all!\",\r\n      icon: \"Icon.80x80\"\r\n    });\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n}\r\n\r\n\r\n// ───────────────────────────────────────────────────\r\n// 5) Reject all: clear all highlights in one batch\r\n// ───────────────────────────────────────────────────\r\nexport async function rejectAllChanges() {\r\n  if (!state.errors.length) return;\r\n\r\n  try {\r\n    await Word.run(async context => {\r\n      for (const { range } of state.errors) {\r\n        context.trackedObjects.add(range);\r\n        range.font.highlightColor = null;\r\n      }\r\n      await context.sync();\r\n    });\r\n\r\n    // reset local state\r\n    state.errors = [];\r\n    state.currentIndex = 0;\r\n    showNotification(NOTIF_ID, {\r\n      type: \"informationalMessage\",\r\n      message: \"Cleared all!\",\r\n      icon: \"Icon.80x80\"\r\n    });\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n}\r\n\r\n","/* global document, Office */\nimport {\n  checkDocumentText,\n  acceptCurrentChange,\n  rejectCurrentChange,\n  acceptAllChanges,\n  rejectAllChanges\n} from \"./preposition.js\";\n\n// — Log immediately when the commands bundle loads —\nconsole.log(\"⭐ commands.js loaded\");\n\nOffice.onReady(info => {\n  console.log(\"▶️ Office.onReady\", info);\n\n  if (info.host === Office.HostType.Word) {\n    console.log(\"🔗 Associating actions…\");\n\n    Office.actions.associate(\"checkDocumentText\",   (...args) => {\n      console.log(\"▶️ OfficeAction invoked: checkDocumentText\", args);\n      return checkDocumentText(...args);\n    });\n\n    Office.actions.associate(\"acceptCurrentChange\", (...args) => {\n      console.log(\"▶️ OfficeAction invoked: acceptCurrentChange\", args);\n      return acceptCurrentChange(...args);\n    });\n\n    Office.actions.associate(\"rejectCurrentChange\", (...args) => {\n      console.log(\"▶️ OfficeAction invoked: rejectCurrentChange\", args);\n      return rejectCurrentChange(...args);\n    });\n\n    Office.actions.associate(\"acceptAllChanges\",    (...args) => {\n      console.log(\"▶️ OfficeAction invoked: acceptAllChanges\", args);\n      return acceptAllChanges(...args);\n    });\n\n    Office.actions.associate(\"rejectAllChanges\",    (...args) => {\n      console.log(\"▶️ OfficeAction invoked: rejectAllChanges\", args);\n      return rejectAllChanges(...args);\n    });\n\n    console.log(\"✅ Actions associated\");\n  }\n});\n"],"names":["state","errors","currentIndex","isChecking","NOTIF_ID","showNotification","id","opts","Office","NotificationMessages","addAsync","determineCorrectPreposition","word","m","normalize","match","first","toLowerCase","unvoiced","Set","key","test","has","console","log","onReady","info","host","HostType","Word","actions","associate","_len","arguments","length","args","Array","_key","async","deleteAsync","run","forEach","e","range","font","highlightColor","matchWholeWord","matchCase","sRes","context","document","body","search","zRes","load","sync","candidates","items","filter","r","text","trim","after","getRange","getNextTextRange","nextWord","actual","expected","trackedObjects","add","push","suggestion","select","type","message","icon","error","checkDocumentText","_len2","_key2","insertText","InsertLocation","replace","next","splice","acceptCurrentChange","_len3","_key3","rejectCurrentChange","_len4","_key4","acceptAllChanges","_len5","_key5","rejectAllChanges"],"sourceRoot":""}