{"version":3,"file":"commands.js","mappings":"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","sources":["webpack://office-addin-taskpane-js/./src/commands/preposition.js","webpack://office-addin-taskpane-js/./src/commands/commands.js"],"sourcesContent":["/* global Office, Word */\r\n\r\nconst state = {\r\n  errors: [],        // Array of { range: Word.Range, suggestion: \"s\"|\"z\" }\r\n  currentIndex: 0,\r\n  isChecking: false\r\n};\r\n\r\nconst HIGHLIGHT_COLOR = \"#FFC0CB\";\r\nconst NOTIF_ID        = \"noErrors\";\r\n\r\nfunction clearNotification(id) {\r\n  if (Office.NotificationMessages?.deleteAsync) {\r\n    Office.NotificationMessages.deleteAsync(id);\r\n  }\r\n}\r\nfunction showNotification(id, opts) {\r\n  if (Office.NotificationMessages?.addAsync) {\r\n    Office.NotificationMessages.addAsync(id, opts);\r\n  }\r\n}\r\n\r\nfunction determineCorrectPreposition(word) {\r\n  if (!word) return null;\r\n  const m = word.normalize(\"NFC\").match(/[\\p{L}0-9]/u);\r\n  if (!m) return null;\r\n  const c = m[0].toLowerCase();\r\n  const voiceless = new Set(['c','č','f','h','k','p','s','š','t']);\r\n  const digitMap   = { '1':'e','2':'d','3':'t','4':'š','5':'p','6':'š','7':'s','8':'o','9':'d','0':'n' };\r\n  const key = /\\d/.test(c) ? digitMap[c] : c;\r\n  return voiceless.has(key) ? \"s\" : \"z\";\r\n}\r\n\r\n// 1) Highlight everything & select first\r\nexport async function checkDocumentText() {\r\n  if (state.isChecking) return;\r\n  state.isChecking = true;\r\n  clearNotification(NOTIF_ID);\r\n  state.errors = [];\r\n  state.currentIndex = 0;\r\n\r\n  try {\r\n    await Word.run(async context => {\r\n      // clear old highlights\r\n      state.errors.forEach(e => {\r\n        context.trackedObjects.add(e.range);\r\n        e.range.font.highlightColor = null;\r\n      });\r\n      await context.sync();\r\n\r\n      // find s/z\r\n      const opts = { matchWholeWord: true, matchCase: false };\r\n      const sRes = context.document.body.search(\"s\", opts);\r\n      const zRes = context.document.body.search(\"z\", opts);\r\n      sRes.load(\"items\"); zRes.load(\"items\");\r\n      await context.sync();\r\n\r\n      const candidates = [...sRes.items, ...zRes.items]\r\n        .filter(r => ['s','z'].includes(r.text.trim().toLowerCase()));\r\n\r\n      for (const r of candidates) {\r\n        const after = r.getRange(\"After\")\r\n                       .getNextTextRange([\" \", \"\\n\", \".\", \",\", \";\", \"?\", \"!\"], true);\r\n        after.load(\"text\");\r\n        await context.sync();\r\n\r\n        const nxt = after.text.trim();\r\n        if (!nxt) continue;\r\n\r\n        const actual   = r.text.trim().toLowerCase();\r\n        const expected = determineCorrectPreposition(nxt);\r\n        if (expected && actual !== expected) {\r\n          // highlight & queue\r\n          context.trackedObjects.add(r);\r\n          r.font.highlightColor = HIGHLIGHT_COLOR;\r\n          state.errors.push({ range: r, suggestion: expected });\r\n        }\r\n      }\r\n\r\n      if (!state.errors.length) {\r\n        showNotification(NOTIF_ID, {\r\n          type: \"informationalMessage\",\r\n          message: \"✨ No mismatches!\",\r\n          icon: \"Icon.80x80\"\r\n        });\r\n      } else {\r\n        // select the first mismatch\r\n        state.currentIndex = 0;\r\n        const first = state.errors[0].range;\r\n        context.trackedObjects.add(first);\r\n        first.select();\r\n        await context.sync();\r\n      }\r\n    });\r\n  } catch (e) {\r\n    console.error(e);\r\n    showNotification(NOTIF_ID, { type: \"errorMessage\", message: \"Check failed\" });\r\n  } finally {\r\n    state.isChecking = false;\r\n  }\r\n}\r\n\r\n// 2) Accept one: operate on current selection\r\nexport async function acceptCurrentChange() {\r\n  console.log(\"▶ acceptCurrentChange ▶ errors:\", state.errors.length, \"index:\", state.currentIndex);\r\n  if (state.currentIndex >= state.errors.length) return;\r\n\r\n  const suggestion = state.errors[state.currentIndex].suggestion;\r\n\r\n  await Word.run(async context => {\r\n    // replace the selected preposition\r\n    const sel = context.document.getSelection();\r\n    sel.insertText(suggestion, Word.InsertLocation.replace);\r\n    sel.font.highlightColor = null;\r\n\r\n    // move to next index and select the next mismatch\r\n    state.currentIndex++;\r\n    if (state.currentIndex < state.errors.length) {\r\n      const nextRange = state.errors[state.currentIndex].range;\r\n      context.trackedObjects.add(nextRange);\r\n      nextRange.select();\r\n    }\r\n\r\n    await context.sync();\r\n  });\r\n}\r\n\r\n// 3) Reject one: clear highlight & move on\r\nexport async function rejectCurrentChange() {\r\n  console.log(\"▶ rejectCurrentChange ▶ errors:\", state.errors.length, \"index:\", state.currentIndex);\r\n  if (state.currentIndex >= state.errors.length) return;\r\n\r\n  await Word.run(async context => {\r\n    // clear highlight on the currently selected mismatch\r\n    const sel = context.document.getSelection();\r\n    sel.font.highlightColor = null;\r\n\r\n    // advance and select next\r\n    state.currentIndex++;\r\n    if (state.currentIndex < state.errors.length) {\r\n      const next = state.errors[state.currentIndex].range;\r\n      context.trackedObjects.add(next);\r\n      next.select();\r\n    }\r\n\r\n    await context.sync();\r\n  });\r\n}\r\n\r\n// 4) Accept all at once\r\nexport async function acceptAllChanges() {\r\n  console.log(\"▶ acceptAllChanges ▶ errors:\", state.errors.length);\r\n  if (!state.errors.length) return;\r\n\r\n  await Word.run(async context => {\r\n    for (const { range, suggestion } of state.errors) {\r\n      context.trackedObjects.add(range);\r\n      range.insertText(suggestion, Word.InsertLocation.replace);\r\n      range.font.highlightColor = null;\r\n    }\r\n    await context.sync();\r\n  });\r\n\r\n  state.errors = [];\r\n  showNotification(NOTIF_ID, { type: \"informationalMessage\", message: \"Accepted all!\" });\r\n}\r\n\r\n// 5) Reject all at once\r\nexport async function rejectAllChanges() {\r\n  console.log(\"▶ rejectAllChanges ▶ errors:\", state.errors.length);\r\n  if (!state.errors.length) return;\r\n\r\n  await Word.run(async context => {\r\n    for (const { range } of state.errors) {\r\n      context.trackedObjects.add(range);\r\n      range.font.highlightColor = null;\r\n    }\r\n    await context.sync();\r\n  });\r\n\r\n  state.errors = [];\r\n  showNotification(NOTIF_ID, { type: \"informationalMessage\", message: \"Cleared all!\" });\r\n}\r\n","/* global document, Office */\nimport {\n  checkDocumentText,\n  acceptCurrentChange,\n  rejectCurrentChange,\n  acceptAllChanges,\n  rejectAllChanges\n} from \"./preposition.js\";\n\n// — Log immediately when the commands bundle loads —\nconsole.log(\"⭐ commands.js loaded\");\n\nOffice.onReady(info => {\n  console.log(\"▶️ Office.onReady\", info);\n\n  if (info.host === Office.HostType.Word) {\n    console.log(\"🔗 Associating actions…\");\n\n    Office.actions.associate(\"checkDocumentText\",   (...args) => {\n      console.log(\"▶️ OfficeAction invoked: checkDocumentText\", args);\n      return checkDocumentText(...args);\n    });\n\n    Office.actions.associate(\"acceptCurrentChange\", (...args) => {\n      console.log(\"▶️ OfficeAction invoked: acceptCurrentChange\", args);\n      return acceptCurrentChange(...args);\n    });\n\n    Office.actions.associate(\"rejectCurrentChange\", (...args) => {\n      console.log(\"▶️ OfficeAction invoked: rejectCurrentChange\", args);\n      return rejectCurrentChange(...args);\n    });\n\n    Office.actions.associate(\"acceptAllChanges\",    (...args) => {\n      console.log(\"▶️ OfficeAction invoked: acceptAllChanges\", args);\n      return acceptAllChanges(...args);\n    });\n\n    Office.actions.associate(\"rejectAllChanges\",    (...args) => {\n      console.log(\"▶️ OfficeAction invoked: rejectAllChanges\", args);\n      return rejectAllChanges(...args);\n    });\n\n    console.log(\"✅ Actions associated\");\n  }\n});\n"],"names":["state","errors","currentIndex","isChecking","NOTIF_ID","showNotification","id","opts","Office","NotificationMessages","addAsync","determineCorrectPreposition","word","m","normalize","match","c","toLowerCase","voiceless","Set","key","test","has","console","log","onReady","info","host","HostType","Word","actions","associate","_len","arguments","length","args","Array","_key","async","deleteAsync","run","forEach","e","context","trackedObjects","add","range","font","highlightColor","sync","matchWholeWord","matchCase","sRes","document","body","search","zRes","load","candidates","items","filter","r","includes","text","trim","after","getRange","getNextTextRange","nxt","actual","expected","push","suggestion","first","select","type","message","icon","error","checkDocumentText","_len2","_key2","sel","getSelection","insertText","InsertLocation","replace","nextRange","acceptCurrentChange","_len3","_key3","next","rejectCurrentChange","_len4","_key4","acceptAllChanges","_len5","_key5","rejectAllChanges"],"sourceRoot":""}