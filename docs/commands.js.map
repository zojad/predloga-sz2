{"version":3,"file":"commands.js","mappings":"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","sources":["webpack://office-addin-taskpane-js/./src/commands/preposition.js","webpack://office-addin-taskpane-js/./src/commands/commands.js"],"sourcesContent":["/* global Office, Word */\r\n\r\nlet state = {\r\n  errors: [],        // Array<{ range: Word.Range, suggestion: \"s\"|\"z\" }>\r\n  currentIndex: 0,\r\n  isChecking: false\r\n};\r\n\r\nconst HIGHLIGHT_COLOR = \"#FFC0CB\";\r\nconst NOTIF_ID        = \"noErrors\";\r\n\r\n// Ribbon notification helpers\r\nfunction clearNotification(id) {\r\n  if (Office.NotificationMessages?.deleteAsync) {\r\n    Office.NotificationMessages.deleteAsync(id);\r\n  }\r\n}\r\nfunction showNotification(id, opts) {\r\n  if (Office.NotificationMessages?.addAsync) {\r\n    Office.NotificationMessages.addAsync(id, opts);\r\n  }\r\n}\r\n\r\n// Decide whether the next word wants \"s\" or \"z\"\r\nfunction determineCorrectPreposition(rawWord) {\r\n  if (!rawWord) return null;\r\n  const m = rawWord.normalize(\"NFC\").match(/[\\p{L}0-9]/u);\r\n  if (!m) return null;\r\n  const c = m[0].toLowerCase();\r\n  const voiceless = new Set(['c','č','f','h','k','p','s','š','t']);\r\n  const digitMap   = { '1':'e','2':'d','3':'t','4':'š','5':'p','6':'š','7':'s','8':'o','9':'d','0':'n' };\r\n  const key = /\\d/.test(c) ? digitMap[c] : c;\r\n  return voiceless.has(key) ? \"s\" : \"z\";\r\n}\r\n\r\n// ─────────────────────────────────────────────────\r\n// 1) Check S/Z: highlight all mismatches & select first\r\n// ─────────────────────────────────────────────────\r\nexport async function checkDocumentText() {\r\n  if (state.isChecking) return;\r\n  state.isChecking = true;\r\n  clearNotification(NOTIF_ID);\r\n\r\n  // reset our queue\r\n  state.errors = [];\r\n  state.currentIndex = 0;\r\n\r\n  try {\r\n    await Word.run(async context => {\r\n      // Clear any old highlights\r\n      const oldS = context.document.body.search(\"s\", { matchWholeWord: true, matchCase: false });\r\n      const oldZ = context.document.body.search(\"z\", { matchWholeWord: true, matchCase: false });\r\n      oldS.load(\"items\"); oldZ.load(\"items\");\r\n      await context.sync();\r\n      [...oldS.items, ...oldZ.items].forEach(r => r.font.highlightColor = null);\r\n      await context.sync();\r\n\r\n      // Find standalone \"s\" and \"z\"\r\n      const sRes = context.document.body.search(\"s\", { matchWholeWord: true, matchCase: false });\r\n      const zRes = context.document.body.search(\"z\", { matchWholeWord: true, matchCase: false });\r\n      sRes.load(\"items\"); zRes.load(\"items\");\r\n      await context.sync();\r\n\r\n      // Evaluate each candidate\r\n      for (const r of [...sRes.items, ...zRes.items]) {\r\n        const t = r.text.trim().toLowerCase();\r\n        if (t !== \"s\" && t !== \"z\") continue;\r\n\r\n        const after = r.getRange(\"After\")\r\n                       .getNextTextRange([\" \", \"\\n\", \".\", \",\", \";\", \"?\", \"!\"], true);\r\n        after.load(\"text\");\r\n        await context.sync();\r\n\r\n        const nxt = after.text.trim();\r\n        if (!nxt) continue;\r\n\r\n        const expected = determineCorrectPreposition(nxt);\r\n        if (expected && expected !== t) {\r\n          r.font.highlightColor = HIGHLIGHT_COLOR;\r\n          state.errors.push({ range: r, suggestion: expected });\r\n        }\r\n      }\r\n\r\n      if (!state.errors.length) {\r\n        showNotification(NOTIF_ID, {\r\n          type: \"informationalMessage\",\r\n          message: \"✨ No mismatches!\",\r\n          icon: \"Icon.80x80\"\r\n        });\r\n      } else {\r\n        // Select the first mismatch\r\n        const first = state.errors[0].range;\r\n        context.trackedObjects.add(first);\r\n        first.select();\r\n        await context.sync();\r\n      }\r\n    });\r\n  } catch (e) {\r\n    console.error(\"checkDocumentText error\", e);\r\n    showNotification(NOTIF_ID, {\r\n      type: \"errorMessage\",\r\n      message: \"Check failed; please try again.\"\r\n    });\r\n  } finally {\r\n    state.isChecking = false;\r\n  }\r\n}\r\n\r\n// ─────────────────────────────────────────────────\r\n// 2) Accept One: replace current & auto-advance\r\n// ─────────────────────────────────────────────────\r\nexport async function acceptCurrentChange() {\r\n  if (state.currentIndex >= state.errors.length) return;\r\n\r\n  // Pull out the current mismatch\r\n  const { range, suggestion } = state.errors.splice(state.currentIndex, 1)[0];\r\n\r\n  // Step 1: replace & clear highlight\r\n  await Word.run(async context => {\r\n    context.trackedObjects.add(range);\r\n    range.insertText(suggestion, Word.InsertLocation.replace);\r\n    range.font.highlightColor = null;\r\n    await context.sync();\r\n  });\r\n\r\n  // Step 2: select next mismatch (if any)\r\n  if (state.currentIndex < state.errors.length) {\r\n    await Word.run(async context => {\r\n      const next = state.errors[state.currentIndex].range;\r\n      context.trackedObjects.add(next);\r\n      next.select();\r\n      await context.sync();\r\n    });\r\n  }\r\n}\r\n\r\n// ─────────────────────────────────────────────────\r\n// 3) Reject One: clear current & auto-advance\r\n// ─────────────────────────────────────────────────\r\nexport async function rejectCurrentChange() {\r\n  if (state.currentIndex >= state.errors.length) return;\r\n\r\n  // Remove current mismatch from queue\r\n  const { range } = state.errors.splice(state.currentIndex, 1)[0];\r\n\r\n  // Step 1: clear highlight\r\n  await Word.run(async context => {\r\n    context.trackedObjects.add(range);\r\n    range.font.highlightColor = null;\r\n    await context.sync();\r\n  });\r\n\r\n  // Step 2: select next mismatch (if any)\r\n  if (state.currentIndex < state.errors.length) {\r\n    await Word.run(async context => {\r\n      const next = state.errors[state.currentIndex].range;\r\n      context.trackedObjects.add(next);\r\n      next.select();\r\n      await context.sync();\r\n    });\r\n  }\r\n}\r\n\r\n// ─────────────────────────────────────────────────\r\n// 4) Accept All: fresh search + replace every mismatch\r\n// ─────────────────────────────────────────────────\r\nexport async function acceptAllChanges() {\r\n  clearNotification(NOTIF_ID);\r\n\r\n  await Word.run(async context => {\r\n    const opts = { matchWholeWord: true, matchCase: false };\r\n    const sRes = context.document.body.search(\"s\", opts);\r\n    const zRes = context.document.body.search(\"z\", opts);\r\n    sRes.load(\"items\"); zRes.load(\"items\");\r\n    await context.sync();\r\n\r\n    for (const r of [...sRes.items, ...zRes.items]) {\r\n      const t = r.text.trim().toLowerCase();\r\n      if (t !== \"s\" && t !== \"z\") continue;\r\n\r\n      const after = r.getRange(\"After\")\r\n                     .getNextTextRange([\" \", \"\\n\", \".\", \",\", \";\", \"?\", \"!\"], true);\r\n      after.load(\"text\");\r\n      await context.sync();\r\n\r\n      const nxt = after.text.trim();\r\n      const expected = determineCorrectPreposition(nxt);\r\n      if (expected && expected !== t) {\r\n        r.insertText(expected, Word.InsertLocation.replace);\r\n        r.font.highlightColor = null;\r\n      }\r\n    }\r\n\r\n    await context.sync();\r\n  });\r\n\r\n  // Reset queue\r\n  state.errors = [];\r\n  state.currentIndex = 0;\r\n\r\n  showNotification(NOTIF_ID, {\r\n    type: \"informationalMessage\",\r\n    message: \"Accepted all!\",\r\n    icon: \"Icon.80x80\"\r\n  });\r\n}\r\n\r\n// ─────────────────────────────────────────────────\r\n// 5) Reject All: fresh search + clear every highlight\r\n// ─────────────────────────────────────────────────\r\nexport async function rejectAllChanges() {\r\n  clearNotification(NOTIF_ID);\r\n\r\n  await Word.run(async context => {\r\n    const opts = { matchWholeWord: true, matchCase: false };\r\n    const sRes = context.document.body.search(\"s\", opts);\r\n    const zRes = context.document.body.search(\"z\", opts);\r\n    sRes.load(\"items\"); zRes.load(\"items\");\r\n    await context.sync();\r\n\r\n    for (const r of [...sRes.items, ...zRes.items]) {\r\n      const t = r.text.trim().toLowerCase();\r\n      if (t === \"s\" || t === \"z\") {\r\n        r.font.highlightColor = null;\r\n      }\r\n    }\r\n\r\n    await context.sync();\r\n  });\r\n\r\n  state.errors = [];\r\n  state.currentIndex = 0;\r\n\r\n  showNotification(NOTIF_ID, {\r\n    type: \"informationalMessage\",\r\n    message: \"Cleared all!\",\r\n    icon: \"Icon.80x80\"\r\n  });\r\n}\r\n","/* global document, Office */\nimport {\n  checkDocumentText,\n  acceptCurrentChange,\n  rejectCurrentChange,\n  acceptAllChanges,\n  rejectAllChanges\n} from \"./preposition.js\";\n\n// — Log immediately when the commands bundle loads —\nconsole.log(\"⭐ commands.js loaded\");\n\nOffice.onReady(info => {\n  console.log(\"▶️ Office.onReady\", info);\n\n  if (info.host === Office.HostType.Word) {\n    console.log(\"🔗 Associating actions…\");\n\n    Office.actions.associate(\"checkDocumentText\",   (...args) => {\n      console.log(\"▶️ OfficeAction invoked: checkDocumentText\", args);\n      return checkDocumentText(...args);\n    });\n\n    Office.actions.associate(\"acceptCurrentChange\", (...args) => {\n      console.log(\"▶️ OfficeAction invoked: acceptCurrentChange\", args);\n      return acceptCurrentChange(...args);\n    });\n\n    Office.actions.associate(\"rejectCurrentChange\", (...args) => {\n      console.log(\"▶️ OfficeAction invoked: rejectCurrentChange\", args);\n      return rejectCurrentChange(...args);\n    });\n\n    Office.actions.associate(\"acceptAllChanges\",    (...args) => {\n      console.log(\"▶️ OfficeAction invoked: acceptAllChanges\", args);\n      return acceptAllChanges(...args);\n    });\n\n    Office.actions.associate(\"rejectAllChanges\",    (...args) => {\n      console.log(\"▶️ OfficeAction invoked: rejectAllChanges\", args);\n      return rejectAllChanges(...args);\n    });\n\n    console.log(\"✅ Actions associated\");\n  }\n});\n"],"names":["state","errors","currentIndex","isChecking","NOTIF_ID","clearNotification","id","Office","NotificationMessages","deleteAsync","showNotification","opts","addAsync","determineCorrectPreposition","rawWord","m","normalize","match","c","toLowerCase","voiceless","Set","key","test","has","console","log","onReady","info","host","HostType","Word","actions","associate","_len","arguments","length","args","Array","_key","async","run","oldS","context","document","body","search","matchWholeWord","matchCase","oldZ","load","sync","items","forEach","r","font","highlightColor","sRes","zRes","t","text","trim","after","getRange","getNextTextRange","nxt","expected","push","range","suggestion","first","trackedObjects","add","select","type","message","icon","e","error","checkDocumentText","_len2","_key2","splice","insertText","InsertLocation","replace","next","acceptCurrentChange","_len3","_key3","rejectCurrentChange","_len4","_key4","acceptAllChanges","_len5","_key5","rejectAllChanges"],"sourceRoot":""}