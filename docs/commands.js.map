{"version":3,"file":"commands.js","mappings":"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","sources":["webpack://office-addin-taskpane-js/./src/commands/preposition.js","webpack://office-addin-taskpane-js/./src/commands/commands.js"],"sourcesContent":["/* global Office, Word */\r\n\r\nlet state = {\r\n  errors: [],\r\n  currentIndex: 0,\r\n  isChecking: false\r\n};\r\n\r\nconst HIGHLIGHT_COLOR = \"#FFC0CB\";\r\nconst NOTIF_ID        = \"noErrors\";\r\n\r\nfunction clearNotification(id) {\r\n  if (Office.NotificationMessages && typeof Office.NotificationMessages.deleteAsync === \"function\") {\r\n    Office.NotificationMessages.deleteAsync(id);\r\n  }\r\n}\r\n\r\nfunction showNotification(id, options) {\r\n  if (Office.NotificationMessages && typeof Office.NotificationMessages.addAsync === \"function\") {\r\n    Office.NotificationMessages.addAsync(id, options);\r\n  }\r\n}\r\n\r\nfunction determineCorrectPreposition(rawWord) {\r\n  if (!rawWord) return null;\r\n  const word = rawWord.normalize(\"NFC\");\r\n  const match = word.match(/[\\p{L}0-9]/u);\r\n  if (!match) return null;\r\n  const first = match[0].toLowerCase();\r\n\r\n  const unvoiced = new Set(['c','č','f','h','k','p','s','š','t']);\r\n  const numMap   = {\r\n    '1':'e','2':'d','3':'t','4':'š','5':'p','6':'š','7':'s','8':'o','9':'d','0':'n'\r\n  };\r\n\r\n  if (/\\d/.test(first)) {\r\n    return unvoiced.has(numMap[first]) ? \"s\" : \"z\";\r\n  }\r\n  return unvoiced.has(first) ? \"s\" : \"z\";\r\n}\r\n\r\nexport async function checkDocumentText() {\r\n  console.log(\"\\u25B6 checkDocumentText()\", state);\r\n  if (state.isChecking) return;\r\n  state.isChecking = true;\r\n  clearNotification(NOTIF_ID);\r\n\r\n  try {\r\n    await Word.run(async context => {\r\n      console.log(\"\\u2192 Word.run(start)\");\r\n\r\n      state.errors.forEach(e => e.range.font.highlightColor = null);\r\n      state.errors = [];\r\n      state.currentIndex = 0;\r\n\r\n      const opts = { matchCase: false, matchWholeWord: true };\r\n      const sSearch = context.document.body.search(\"s\", opts);\r\n      const zSearch = context.document.body.search(\"z\", opts);\r\n      sSearch.load(\"items\");\r\n      zSearch.load(\"items\");\r\n      await context.sync();\r\n\r\n      const allRanges = [...sSearch.items, ...zSearch.items];\r\n      console.log(\"\\u2192 found\", allRanges.length, \"s/z candidates\");\r\n\r\n      const candidates = allRanges.filter(r => [\"s\",\"z\"].includes(r.text.trim().toLowerCase()));\r\n\r\n      const errors = [];\r\n      for (let prep of candidates) {\r\n        let after;\r\n        try {\r\n          after = prep.getRange(Word.RangeLocation.After);\r\n          if (typeof after.expandTo === \"function\" && Word?.TextRangeUnit?.Word) {\r\n            after.expandTo(Word.TextRangeUnit.Word);\r\n            after.load(\"text\");\r\n            await context.sync();\r\n          } else {\r\n            console.warn(\"Skipping candidate; expandTo unsupported\");\r\n            continue;\r\n          }\r\n        } catch (e) {\r\n          console.warn(\"Skipping candidate due to error:\", e);\r\n          continue;\r\n        }\r\n\r\n        const nextWord = after.text.trim();\r\n        if (!nextWord) continue;\r\n\r\n        const actual = prep.text.trim().toLowerCase();\r\n        const expect = determineCorrectPreposition(nextWord);\r\n        if (expect && actual !== expect) {\r\n          errors.push({ range: prep, suggestion: expect });\r\n        }\r\n      }\r\n\r\n      state.errors = errors;\r\n      console.log(\"\\u2192 mismatches found:\", errors.length);\r\n\r\n      if (!errors.length) {\r\n        showNotification(NOTIF_ID, {\r\n          type: \"informationalMessage\",\r\n          message: \"\\u2728 No 's'/'z' mismatches!\",\r\n          icon: \"Icon.80x80\",\r\n          persistent: false\r\n        });\r\n      } else {\r\n        errors.forEach(e => e.range.font.highlightColor = HIGHLIGHT_COLOR);\r\n        await context.sync();\r\n        errors[0].range.select();\r\n      }\r\n    });\r\n  } catch (e) {\r\n    console.error(\"checkDocumentText error\", e);\r\n    showNotification(\"checkError\", {\r\n      type: \"errorMessage\",\r\n      message: \"Check failed; please try again.\",\r\n      persistent: false\r\n    });\r\n  } finally {\r\n    state.isChecking = false;\r\n  }\r\n}\r\n\r\nexport async function acceptCurrentChange() {\r\n  if (state.currentIndex >= state.errors.length) return;\r\n  try {\r\n    await Word.run(async context => {\r\n      const err = state.errors[state.currentIndex];\r\n      err.range.insertText(err.suggestion, Word.InsertLocation.replace);\r\n      err.range.font.highlightColor = null;\r\n      await context.sync();\r\n      state.currentIndex++;\r\n      if (state.currentIndex < state.errors.length) {\r\n        state.errors[state.currentIndex].range.select();\r\n      }\r\n    });\r\n  } catch (e) {\r\n    console.error(\"acceptCurrentChange error\", e);\r\n  }\r\n}\r\n\r\nexport async function rejectCurrentChange() {\r\n  if (state.currentIndex >= state.errors.length) return;\r\n  try {\r\n    await Word.run(async context => {\r\n      const err = state.errors[state.currentIndex];\r\n      err.range.font.highlightColor = null;\r\n      await context.sync();\r\n      state.currentIndex++;\r\n      if (state.currentIndex < state.errors.length) {\r\n        state.errors[state.currentIndex].range.select();\r\n      }\r\n    });\r\n  } catch (e) {\r\n    console.error(\"rejectCurrentChange error\", e);\r\n  }\r\n}\r\n\r\nexport async function acceptAllChanges() {\r\n  if (!state.errors.length) return;\r\n  try {\r\n    await Word.run(async context => {\r\n      for (const err of state.errors) {\r\n        err.range.insertText(err.suggestion, Word.InsertLocation.replace);\r\n        err.range.font.highlightColor = null;\r\n      }\r\n      await context.sync();\r\n      state.errors = [];\r\n    });\r\n  } catch (e) {\r\n    console.error(\"acceptAllChanges error\", e);\r\n  }\r\n}\r\n\r\nexport async function rejectAllChanges() {\r\n  if (!state.errors.length) return;\r\n  try {\r\n    await Word.run(async context => {\r\n      for (const err of state.errors) {\r\n        err.range.font.highlightColor = null;\r\n      }\r\n      await context.sync();\r\n      state.errors = [];\r\n    });\r\n  } catch (e) {\r\n    console.error(\"rejectAllChanges error\", e);\r\n  }\r\n}\r\n\r\n","/* global document, Office */\nimport {\n  checkDocumentText,\n  acceptCurrentChange,\n  rejectCurrentChange,\n  acceptAllChanges,\n  rejectAllChanges\n} from \"./preposition.js\";\n\n// — Log immediately when the commands bundle loads —\nconsole.log(\"⭐ commands.js loaded\");\n\nOffice.onReady(info => {\n  console.log(\"▶️ Office.onReady\", info);\n\n  if (info.host === Office.HostType.Word) {\n    console.log(\"🔗 Associating actions…\");\n    Office.actions.associate(\"checkDocumentText\",   checkDocumentText);\n    Office.actions.associate(\"acceptCurrentChange\", acceptCurrentChange);\n    Office.actions.associate(\"rejectCurrentChange\", rejectCurrentChange);\n    Office.actions.associate(\"acceptAllChanges\",    acceptAllChanges);\n    Office.actions.associate(\"rejectAllChanges\",    rejectAllChanges);\n    console.log(\"✅ Actions associated\");\n  }\n});\n"],"names":["state","errors","currentIndex","isChecking","NOTIF_ID","showNotification","id","options","Office","NotificationMessages","addAsync","determineCorrectPreposition","rawWord","match","normalize","first","toLowerCase","unvoiced","Set","test","has","async","checkDocumentText","console","log","deleteAsync","Word","run","forEach","e","range","font","highlightColor","opts","matchCase","matchWholeWord","sSearch","context","document","body","search","zSearch","load","sync","allRanges","items","length","candidates","filter","r","includes","text","trim","prep","after","getRange","RangeLocation","After","expandTo","TextRangeUnit","warn","nextWord","actual","expect","push","suggestion","select","type","message","icon","persistent","error","acceptCurrentChange","err","insertText","InsertLocation","replace","rejectCurrentChange","acceptAllChanges","rejectAllChanges","onReady","info","host","HostType","actions","associate"],"sourceRoot":""}