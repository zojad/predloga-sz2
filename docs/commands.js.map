{"version":3,"file":"commands.js","mappings":"yBAEA,IAAIA,EAAQ,CACVC,OAAQ,GACRC,aAAc,EACdC,YAAY,GAGd,MACMC,EAAiB,WAYvB,SAASC,EAAiBC,EAAIC,GAE1BC,OAAOC,sBACyC,mBAAzCD,OAAOC,qBAAqBC,UAEnCF,OAAOC,qBAAqBC,SAASJ,EAAIC,EAE7C,CAGA,SAASI,EAA4BC,GACnC,IAAKA,EAAS,OAAO,KACrB,MACMC,EADOD,EAAQE,UAAU,OACZD,MAAM,eACzB,IAAKA,EAAO,OAAO,KACnB,MAAME,EAAQF,EAAM,GAAGG,cAEjBC,EAAW,IAAIC,IAAI,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,MAM1D,MAAI,KAAKC,KAAKJ,GACLE,EAASG,IAND,CACf,EAAI,IAAI,EAAI,IAAI,EAAI,IAAI,EAAI,IAAI,EAAI,IACpC,EAAI,IAAI,EAAI,IAAI,EAAI,IAAI,EAAI,IAAI,EAAI,KAITL,IAAU,IAAM,IAEtCE,EAASG,IAAIL,GAAS,IAAM,GACrC,CAKOM,eAAeC,EAAkBC,GAEtC,GAAIvB,EAAMG,WACRoB,EAAMC,gBADR,CA3CF,IAA2BlB,EA+CzBN,EAAMG,YAAa,EA/CMG,EAgDPF,EA9ChBI,OAAOC,sBAC4C,mBAA5CD,OAAOC,qBAAqBgB,aAEnCjB,OAAOC,qBAAqBgB,YAAYnB,GA6C1C,UACQoB,KAAKC,KAAIN,UAEbrB,EAAMC,OAAO2B,SAAQC,GAAKA,EAAEC,MAAMC,KAAKC,eAAiB,OACxDhC,EAAMC,OAAS,GACfD,EAAME,aAAe,EAErB,MAAM+B,EAAO,CAAEC,WAAW,EAAOC,gBAAgB,GACjD,IAAIC,EAAY,SAEhBf,eAAoBgB,GAClB,MAAMC,EAAID,EAAQE,OAAO,aAAcN,GACvCK,EAAEE,KAAK,eACDC,EAAQC,OACdN,EAAUO,QAAQL,EAAEM,MACtB,CAEMC,CAAKJ,EAAQK,SAASC,MAG5B,MAAMC,EAAaZ,EAAUa,QAAOX,GAClC,CAAC,IAAI,KAAKY,SAASZ,EAAEa,KAAKC,OAAOpC,iBAGnC,IAAIf,EAAS,GACb,IAAK,IAAIoD,KAAQL,EAAY,CAC3B,MAAMM,EAAQD,EAAKE,SAAS,SAC5BD,EAAME,SAAS9B,KAAK+B,cAAcC,MAClCJ,EAAMd,KAAK,cACLC,EAAQC,OAEd,MAAMiB,EAAWL,EAAMH,KAAKC,OAC5B,IAAKO,EAAU,SAEf,MAAMC,EAASP,EAAKF,KAAKC,OAAOpC,cAC1B6C,EAASlD,EAA4BgD,GACvCE,GAAUD,IAAWC,GACvB5D,EAAO0C,KAAK,CAAEb,MAAOuB,EAAMS,WAAYD,GAE3C,CAEA7D,EAAMC,OAASA,EACVA,EAAO8D,QAWZ9D,EAAO2B,SAAQC,GAAKA,EAAEC,MAAMC,KAAKC,eA3Gf,kBA4GZS,EAAQC,OACdzC,EAAO,GAAG6B,MAAMkC,UAZd3D,EAAiBD,EAAU,CACzB6D,KAAM,uBACNC,QAAS,4BACTC,KAAM,aACNC,YAAY,GAQQ,GAE5B,CAAE,MAAOvC,GACPwC,QAAQC,MAAMzC,GACdxB,EAAiB,aAAc,CAC7B4D,KAAM,eACNC,QAAS,kCACTE,YAAY,GAEhB,CAAE,QACApE,EAAMG,YAAa,EACnBoB,EAAMC,WACR,CAvEA,CAwEF,CAKOH,eAAekD,EAAoBhD,GACxC,GAAIvB,EAAME,cAAgBF,EAAMC,OAAO8D,OACrCxC,EAAMC,iBAIR,UACQE,KAAKC,KAAIN,UACb,MAAMmD,EAAMxE,EAAMC,OAAOD,EAAME,cAC/BsE,EAAI1C,MAAM2C,WAAWD,EAAIV,WAAYpC,KAAKgD,eAAeC,SACzDH,EAAI1C,MAAMC,KAAKC,eAAiB,WAC1BS,EAAQC,OAEd1C,EAAME,eACFF,EAAME,aAAeF,EAAMC,OAAO8D,QACpC/D,EAAMC,OAAOD,EAAME,cAAc4B,MAAMkC,QACzC,GAEJ,CAAE,MAAOnC,GACPwC,QAAQC,MAAMzC,GACdxB,EAAiB,cAAe,CAC9B4D,KAAM,eACNC,QAAS,mDACTE,YAAY,GAEhB,CAAE,QACA7C,EAAMC,WACR,CACF,CAKOH,eAAeuD,EAAoBrD,GACxC,GAAIvB,EAAME,cAAgBF,EAAMC,OAAO8D,OACrCxC,EAAMC,iBAIR,UACQE,KAAKC,KAAIN,UACDrB,EAAMC,OAAOD,EAAME,cAC3B4B,MAAMC,KAAKC,eAAiB,WAC1BS,EAAQC,OAEd1C,EAAME,eACFF,EAAME,aAAeF,EAAMC,OAAO8D,QACpC/D,EAAMC,OAAOD,EAAME,cAAc4B,MAAMkC,QACzC,GAEJ,CAAE,MAAOnC,GACPwC,QAAQC,MAAMzC,GACdxB,EAAiB,cAAe,CAC9B4D,KAAM,eACNC,QAAS,oDACTE,YAAY,GAEhB,CAAE,QACA7C,EAAMC,WACR,CACF,CAKOH,eAAewD,EAAiBtD,GACrC,GAAKvB,EAAMC,OAAO8D,OAKlB,UACQrC,KAAKC,KAAIN,UACb,IAAK,MAAMmD,KAAOxE,EAAMC,OACtBuE,EAAI1C,MAAM2C,WAAWD,EAAIV,WAAYpC,KAAKgD,eAAeC,SACzDH,EAAI1C,MAAMC,KAAKC,eAAiB,WAE5BS,EAAQC,OACd1C,EAAMC,OAAS,EAAE,GAErB,CAAE,MAAO4B,GACPwC,QAAQC,MAAMzC,GACdxB,EAAiB,iBAAkB,CACjC4D,KAAM,eACNC,QAAS,iDACTE,YAAY,GAEhB,CAAE,QACA7C,EAAMC,WACR,MAtBED,EAAMC,WAuBV,CAKOH,eAAeyD,EAAiBvD,GACrC,GAAKvB,EAAMC,OAAO8D,OAKlB,UACQrC,KAAKC,KAAIN,UACbrB,EAAMC,OAAO2B,SAAQC,GAAKA,EAAEC,MAAMC,KAAKC,eAAiB,aAClDS,EAAQC,OACd1C,EAAMC,OAAS,EAAE,GAErB,CAAE,MAAO4B,GACPwC,QAAQC,MAAMzC,GACdxB,EAAiB,iBAAkB,CACjC4D,KAAM,eACNC,QAAS,6CACTE,YAAY,GAEhB,CAAE,QACA7C,EAAMC,WACR,MAnBED,EAAMC,WAoBV,CCnPAhB,OAAOuE,SAAQC,IACTA,EAAKC,OAASzE,OAAO0E,SAASxD,OAChClB,OAAO2E,QAAQC,UAAU,oBAAuB9D,GAChDd,OAAO2E,QAAQC,UAAU,sBAAuBb,GAChD/D,OAAO2E,QAAQC,UAAU,sBAAuBR,GAChDpE,OAAO2E,QAAQC,UAAU,mBAAuBP,GAChDrE,OAAO2E,QAAQC,UAAU,mBAAuBN,GAClD,G","sources":["webpack://office-addin-taskpane-js/./src/commands/preposition.js","webpack://office-addin-taskpane-js/./src/commands/commands.js"],"sourcesContent":["/* global Office, Word */\r\n\r\nlet state = {\r\n  errors: [],\r\n  currentIndex: 0,\r\n  isChecking: false\r\n};\r\n\r\nconst HIGHLIGHT_COLOR = \"#FFC0CB\";\r\nconst NOTIF_ID       = \"noErrors\";\r\n\r\n//–– Helpers ––//\r\nfunction clearNotification(id) {\r\n  if (\r\n    Office.NotificationMessages &&\r\n    typeof Office.NotificationMessages.deleteAsync === \"function\"\r\n  ) {\r\n    Office.NotificationMessages.deleteAsync(id);\r\n  }\r\n}\r\n\r\nfunction showNotification(id, options) {\r\n  if (\r\n    Office.NotificationMessages &&\r\n    typeof Office.NotificationMessages.addAsync === \"function\"\r\n  ) {\r\n    Office.NotificationMessages.addAsync(id, options);\r\n  }\r\n}\r\n\r\n//–– Logic ––//\r\nfunction determineCorrectPreposition(rawWord) {\r\n  if (!rawWord) return null;\r\n  const word = rawWord.normalize(\"NFC\");\r\n  const match = word.match(/[\\p{L}0-9]/u);\r\n  if (!match) return null;\r\n  const first = match[0].toLowerCase();\r\n\r\n  const unvoiced = new Set(['c','č','f','h','k','p','s','š','t']);\r\n  const numMap   = {\r\n    '1':'e','2':'d','3':'t','4':'š','5':'p',\r\n    '6':'š','7':'s','8':'o','9':'d','0':'n'\r\n  };\r\n\r\n  if (/\\d/.test(first)) {\r\n    return unvoiced.has(numMap[first]) ? \"s\" : \"z\";\r\n  }\r\n  return unvoiced.has(first) ? \"s\" : \"z\";\r\n}\r\n\r\n/**\r\n * Checks the doc for standalone “s”/“z” and highlights mismatches.\r\n */\r\nexport async function checkDocumentText(event) {\r\n  // prevent re-entry\r\n  if (state.isChecking) {\r\n    event.completed();\r\n    return;\r\n  }\r\n  state.isChecking = true;\r\n  clearNotification(NOTIF_ID);\r\n\r\n  try {\r\n    await Word.run(async context => {\r\n      // clear old highlights\r\n      state.errors.forEach(e => e.range.font.highlightColor = null);\r\n      state.errors = [];\r\n      state.currentIndex = 0;\r\n\r\n      const opts = { matchCase: false, matchWholeWord: true };\r\n      let allRanges = [];\r\n\r\n      async function find(szScope) {\r\n        const r = szScope.search(\"\\\\b[sz]\\\\b\", opts);\r\n        r.load(\"items\");\r\n        await context.sync();\r\n        allRanges.push(...r.items);\r\n      }\r\n\r\n      await find(context.document.body);\r\n\r\n      // filter exactly \"s\" or \"z\"\r\n      const candidates = allRanges.filter(r =>\r\n        [\"s\",\"z\"].includes(r.text.trim().toLowerCase())\r\n      );\r\n\r\n      let errors = [];\r\n      for (let prep of candidates) {\r\n        const after = prep.getRange(\"After\");\r\n        after.expandTo(Word.TextRangeUnit.word);\r\n        after.load(\"text\");\r\n        await context.sync();\r\n\r\n        const nextWord = after.text.trim();\r\n        if (!nextWord) continue;\r\n\r\n        const actual = prep.text.trim().toLowerCase();\r\n        const expect = determineCorrectPreposition(nextWord);\r\n        if (expect && actual !== expect) {\r\n          errors.push({ range: prep, suggestion: expect });\r\n        }\r\n      }\r\n\r\n      state.errors = errors;\r\n      if (!errors.length) {\r\n        showNotification(NOTIF_ID, {\r\n          type: \"informationalMessage\",\r\n          message: \"🎉 No ‘s’/‘z’ mismatches!\",\r\n          icon: \"Icon.80x80\",\r\n          persistent: false\r\n        });\r\n        return;\r\n      }\r\n\r\n      // highlight and select first\r\n      errors.forEach(e => e.range.font.highlightColor = HIGHLIGHT_COLOR);\r\n      await context.sync();\r\n      errors[0].range.select();\r\n    });\r\n  } catch (e) {\r\n    console.error(e);\r\n    showNotification(\"checkError\", {\r\n      type: \"errorMessage\",\r\n      message: \"Check failed; please try again.\",\r\n      persistent: false\r\n    });\r\n  } finally {\r\n    state.isChecking = false;\r\n    event.completed();\r\n  }\r\n}\r\n\r\n/**\r\n * Replaces the current error with its suggestion and advances to the next.\r\n */\r\nexport async function acceptCurrentChange(event) {\r\n  if (state.currentIndex >= state.errors.length) {\r\n    event.completed();\r\n    return;\r\n  }\r\n\r\n  try {\r\n    await Word.run(async context => {\r\n      const err = state.errors[state.currentIndex];\r\n      err.range.insertText(err.suggestion, Word.InsertLocation.replace);\r\n      err.range.font.highlightColor = null;\r\n      await context.sync();\r\n\r\n      state.currentIndex++;\r\n      if (state.currentIndex < state.errors.length) {\r\n        state.errors[state.currentIndex].range.select();\r\n      }\r\n    });\r\n  } catch (e) {\r\n    console.error(e);\r\n    showNotification(\"acceptError\", {\r\n      type: \"errorMessage\",\r\n      message: \"Failed to apply change. Please re-run the check.\",\r\n      persistent: false\r\n    });\r\n  } finally {\r\n    event.completed();\r\n  }\r\n}\r\n\r\n/**\r\n * Clears highlight on current error (i.e. “rejects” it) and advances.\r\n */\r\nexport async function rejectCurrentChange(event) {\r\n  if (state.currentIndex >= state.errors.length) {\r\n    event.completed();\r\n    return;\r\n  }\r\n\r\n  try {\r\n    await Word.run(async context => {\r\n      const err = state.errors[state.currentIndex];\r\n      err.range.font.highlightColor = null;\r\n      await context.sync();\r\n\r\n      state.currentIndex++;\r\n      if (state.currentIndex < state.errors.length) {\r\n        state.errors[state.currentIndex].range.select();\r\n      }\r\n    });\r\n  } catch (e) {\r\n    console.error(e);\r\n    showNotification(\"rejectError\", {\r\n      type: \"errorMessage\",\r\n      message: \"Failed to reject change. Please re-run the check.\",\r\n      persistent: false\r\n    });\r\n  } finally {\r\n    event.completed();\r\n  }\r\n}\r\n\r\n/**\r\n * Applies all suggestions in one go.\r\n */\r\nexport async function acceptAllChanges(event) {\r\n  if (!state.errors.length) {\r\n    event.completed();\r\n    return;\r\n  }\r\n\r\n  try {\r\n    await Word.run(async context => {\r\n      for (const err of state.errors) {\r\n        err.range.insertText(err.suggestion, Word.InsertLocation.replace);\r\n        err.range.font.highlightColor = null;\r\n      }\r\n      await context.sync();\r\n      state.errors = [];\r\n    });\r\n  } catch (e) {\r\n    console.error(e);\r\n    showNotification(\"acceptAllError\", {\r\n      type: \"errorMessage\",\r\n      message: \"Failed to apply all changes. Please try again.\",\r\n      persistent: false\r\n    });\r\n  } finally {\r\n    event.completed();\r\n  }\r\n}\r\n\r\n/**\r\n * Clears all highlights (i.e. “rejects” everything).\r\n */\r\nexport async function rejectAllChanges(event) {\r\n  if (!state.errors.length) {\r\n    event.completed();\r\n    return;\r\n  }\r\n\r\n  try {\r\n    await Word.run(async context => {\r\n      state.errors.forEach(e => e.range.font.highlightColor = null);\r\n      await context.sync();\r\n      state.errors = [];\r\n    });\r\n  } catch (e) {\r\n    console.error(e);\r\n    showNotification(\"rejectAllError\", {\r\n      type: \"errorMessage\",\r\n      message: \"Failed to clear changes. Please try again.\",\r\n      persistent: false\r\n    });\r\n  } finally {\r\n    event.completed();\r\n  }\r\n}\r\n","/* global document, Office */\nimport {\n  checkDocumentText,\n  acceptCurrentChange,\n  rejectCurrentChange,\n  acceptAllChanges,\n  rejectAllChanges\n} from \"./preposition.js\";\n\nOffice.onReady(info => {\n  if (info.host === Office.HostType.Word) {\n    Office.actions.associate(\"checkDocumentText\",   checkDocumentText);\n    Office.actions.associate(\"acceptCurrentChange\", acceptCurrentChange);\n    Office.actions.associate(\"rejectCurrentChange\", rejectCurrentChange);\n    Office.actions.associate(\"acceptAllChanges\",    acceptAllChanges);\n    Office.actions.associate(\"rejectAllChanges\",    rejectAllChanges);\n  }\n});\n"],"names":["state","errors","currentIndex","isChecking","NOTIF_ID","showNotification","id","options","Office","NotificationMessages","addAsync","determineCorrectPreposition","rawWord","match","normalize","first","toLowerCase","unvoiced","Set","test","has","async","checkDocumentText","event","completed","deleteAsync","Word","run","forEach","e","range","font","highlightColor","opts","matchCase","matchWholeWord","allRanges","szScope","r","search","load","context","sync","push","items","find","document","body","candidates","filter","includes","text","trim","prep","after","getRange","expandTo","TextRangeUnit","word","nextWord","actual","expect","suggestion","length","select","type","message","icon","persistent","console","error","acceptCurrentChange","err","insertText","InsertLocation","replace","rejectCurrentChange","acceptAllChanges","rejectAllChanges","onReady","info","host","HostType","actions","associate"],"sourceRoot":""}