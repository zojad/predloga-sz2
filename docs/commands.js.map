{"version":3,"file":"commands.js","mappings":"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","sources":["webpack://office-addin-taskpane-js/./src/commands/preposition.js","webpack://office-addin-taskpane-js/./src/commands/commands.js"],"sourcesContent":["/* global Office, Word */\r\n\r\nlet state = {\r\n  errors: [],        // Array<{ range: Word.Range, suggestion: \"s\"|\"S\"|\"z\"|\"Z\" }>\r\n  currentIndex: 0,\r\n  isChecking: false\r\n};\r\n\r\nconst HIGHLIGHT_COLOR = \"#FFC0CB\";\r\nconst NOTIF_ID        = \"noErrors\";\r\n\r\n// Ribbon notification helpers\r\nfunction clearNotification(id) {\r\n  if (Office.NotificationMessages?.deleteAsync) {\r\n    Office.NotificationMessages.deleteAsync(id);\r\n  }\r\n}\r\nfunction showNotification(id, opts) {\r\n  if (Office.NotificationMessages?.addAsync) {\r\n    Office.NotificationMessages.addAsync(id, opts);\r\n  }\r\n}\r\n\r\n/**\r\n * For the next word, return 's' if unvoiced (c,č,f,h,k,p,s,š,t),\r\n * otherwise 'z'.  (Digits map via digitMap.)\r\n */\r\nfunction determineCorrectPreposition(rawWord) {\r\n  if (!rawWord) return null;\r\n  const m = rawWord.normalize(\"NFC\").match(/[\\p{L}0-9]/u);\r\n  if (!m) return null;\r\n  const c = m[0].toLowerCase();\r\n\r\n  const unvoiced = new Set(['c','č','f','h','k','p','s','š','t']);\r\n  const digitMap = {\r\n    '1':'e','2':'d','3':'t','4':'š','5':'p',\r\n    '6':'š','7':'s','8':'o','9':'d','0':'n'\r\n  };\r\n  const key = /\\d/.test(c) ? digitMap[c] : c;\r\n\r\n  return unvoiced.has(key) ? \"s\" : \"z\";\r\n}\r\n\r\n// ─────────────────────────────────────────────────\r\n// 1) Check S/Z: highlight all mismatches & select first\r\n// ─────────────────────────────────────────────────\r\nexport async function checkDocumentText() {\r\n  if (state.isChecking) return;\r\n  state.isChecking = true;\r\n  clearNotification(NOTIF_ID);\r\n\r\n  // Reset queue\r\n  state.errors = [];\r\n  state.currentIndex = 0;\r\n\r\n  try {\r\n    await Word.run(async context => {\r\n      // 1) Clear old highlights\r\n      const oldS = context.document.body.search(\"s\", { matchWholeWord: true, matchCase: false });\r\n      const oldZ = context.document.body.search(\"z\", { matchWholeWord: true, matchCase: false });\r\n      oldS.load(\"items\"); oldZ.load(\"items\");\r\n      await context.sync();\r\n      [...oldS.items, ...oldZ.items].forEach(r => r.font.highlightColor = null);\r\n      await context.sync();\r\n\r\n      // 2) Search for standalone s / z\r\n      const sRes = context.document.body.search(\"s\", { matchWholeWord: true, matchCase: false });\r\n      const zRes = context.document.body.search(\"z\", { matchWholeWord: true, matchCase: false });\r\n      sRes.load(\"items\"); zRes.load(\"items\");\r\n      await context.sync();\r\n\r\n      // 3) Filter to pure single-letter and compute suggestion\r\n      for (const r of [...sRes.items, ...zRes.items]) {\r\n        const raw = r.text.trim();\r\n        if (!/^[sSzZ]$/.test(raw)) continue;       // only exact \"s\" or \"z\"\r\n\r\n        const actualLower = raw.toLowerCase();\r\n        const after = r.getRange(\"After\")\r\n                       .getNextTextRange([\" \", \"\\n\", \".\", \",\", \";\", \"?\", \"!\"], true);\r\n        after.load(\"text\");\r\n        await context.sync();\r\n\r\n        const nxt = after.text.trim();\r\n        if (!nxt) continue;\r\n\r\n        const expectedLower = determineCorrectPreposition(nxt);\r\n        if (!expectedLower || expectedLower === actualLower) continue;\r\n\r\n        // preserve case\r\n        const suggestion = (raw === raw.toUpperCase())\r\n          ? expectedLower.toUpperCase()\r\n          : expectedLower;\r\n\r\n        // *** track this range so it survives into the Accept/Reject handlers! ***\r\n        context.trackedObjects.add(r);\r\n\r\n        // highlight & queue\r\n        r.font.highlightColor = HIGHLIGHT_COLOR;\r\n        state.errors.push({ range: r, suggestion });\r\n      }\r\n\r\n      await context.sync();\r\n\r\n      if (!state.errors.length) {\r\n        showNotification(NOTIF_ID, {\r\n          type: \"informationalMessage\",\r\n          message: \"✨ No mismatches!\",\r\n          icon: \"Icon.80x80\"\r\n        });\r\n      } else {\r\n        // select the first mismatch\r\n        const first = state.errors[0].range;\r\n        context.trackedObjects.add(first);\r\n        first.select();\r\n        await context.sync();\r\n      }\r\n    });\r\n  } catch (e) {\r\n    console.error(\"checkDocumentText error\", e);\r\n    showNotification(NOTIF_ID, {\r\n      type: \"errorMessage\",\r\n      message: \"Check failed; please try again.\"\r\n    });\r\n  } finally {\r\n    state.isChecking = false;\r\n  }\r\n}\r\n\r\n// ─────────────────────────────────────────────────\r\n// 2) Accept One: replace current & auto-advance\r\n// ─────────────────────────────────────────────────\r\nexport async function acceptCurrentChange() {\r\n  if (state.currentIndex >= state.errors.length) return;\r\n\r\n  // splice out the queued mismatch\r\n  const { range, suggestion } = state.errors.splice(state.currentIndex, 1)[0];\r\n\r\n  await Word.run(async context => {\r\n    context.trackedObjects.add(range);\r\n    range.insertText(suggestion, Word.InsertLocation.replace);\r\n    range.font.highlightColor = null;\r\n    await context.sync();\r\n  });\r\n\r\n  // select the next mismatch, if any\r\n  if (state.currentIndex < state.errors.length) {\r\n    await Word.run(async context => {\r\n      const next = state.errors[state.currentIndex].range;\r\n      context.trackedObjects.add(next);\r\n      next.select();\r\n      await context.sync();\r\n    });\r\n  }\r\n}\r\n\r\n// ─────────────────────────────────────────────────\r\n// 3) Reject One: clear current & auto-advance\r\n// ─────────────────────────────────────────────────\r\nexport async function rejectCurrentChange() {\r\n  if (state.currentIndex >= state.errors.length) return;\r\n\r\n  const { range } = state.errors.splice(state.currentIndex, 1)[0];\r\n\r\n  await Word.run(async context => {\r\n    context.trackedObjects.add(range);\r\n    range.font.highlightColor = null;\r\n    await context.sync();\r\n  });\r\n\r\n  if (state.currentIndex < state.errors.length) {\r\n    await Word.run(async context => {\r\n      const next = state.errors[state.currentIndex].range;\r\n      context.trackedObjects.add(next);\r\n      next.select();\r\n      await context.sync();\r\n    });\r\n  }\r\n}\r\n\r\n// ─────────────────────────────────────────────────\r\n// 4) Accept All: fresh search + replace every mismatch\r\n// ─────────────────────────────────────────────────\r\nexport async function acceptAllChanges() {\r\n  clearNotification(NOTIF_ID);\r\n\r\n  await Word.run(async context => {\r\n    const opts = { matchWholeWord: true, matchCase: false };\r\n    const sRes = context.document.body.search(\"s\", opts);\r\n    const zRes = context.document.body.search(\"z\", opts);\r\n    sRes.load(\"items\"); zRes.load(\"items\");\r\n    await context.sync();\r\n\r\n    for (const r of [...sRes.items, ...zRes.items]) {\r\n      const raw = r.text.trim();\r\n      if (!/^[sSzZ]$/.test(raw)) continue;\r\n      const actualLower = raw.toLowerCase();\r\n\r\n      const after = r.getRange(\"After\")\r\n                     .getNextTextRange([\" \", \"\\n\", \".\", \",\", \";\", \"?\", \"!\"], true);\r\n      after.load(\"text\");\r\n      await context.sync();\r\n\r\n      const nxt = after.text.trim();\r\n      if (!nxt) continue;\r\n\r\n      const expectedLower = determineCorrectPreposition(nxt);\r\n      if (!expectedLower || expectedLower === actualLower) continue;\r\n\r\n      const suggestion = (raw === raw.toUpperCase())\r\n        ? expectedLower.toUpperCase()\r\n        : expectedLower;\r\n\r\n      r.insertText(suggestion, Word.InsertLocation.replace);\r\n      r.font.highlightColor = null;\r\n    }\r\n\r\n    await context.sync();\r\n  });\r\n\r\n  // reset queue\r\n  state.errors = [];\r\n  state.currentIndex = 0;\r\n  showNotification(NOTIF_ID, {\r\n    type: \"informationalMessage\",\r\n    message: \"Accepted all!\",\r\n    icon: \"Icon.80x80\"\r\n  });\r\n}\r\n\r\n// ─────────────────────────────────────────────────\r\n// 5) Reject All: fresh search + clear every highlight\r\n// ─────────────────────────────────────────────────\r\nexport async function rejectAllChanges() {\r\n  clearNotification(NOTIF_ID);\r\n\r\n  await Word.run(async context => {\r\n    const opts = { matchWholeWord: true, matchCase: false };\r\n    const sRes = context.document.body.search(\"s\", opts);\r\n    const zRes = context.document.body.search(\"z\", opts);\r\n    sRes.load(\"items\"); zRes.load(\"items\");\r\n    await context.sync();\r\n\r\n    for (const r of [...sRes.items, ...zRes.items]) {\r\n      const raw = r.text.trim();\r\n      if (!/^[sSzZ]$/.test(raw)) continue;\r\n      r.font.highlightColor = null;\r\n    }\r\n    await context.sync();\r\n  });\r\n\r\n  state.errors = [];\r\n  state.currentIndex = 0;\r\n  showNotification(NOTIF_ID, {\r\n    type: \"informationalMessage\",\r\n    message: \"Cleared all!\",\r\n    icon: \"Icon.80x80\"\r\n  });\r\n}\r\n\r\n","/* global document, Office */\nimport {\n  checkDocumentText,\n  acceptCurrentChange,\n  rejectCurrentChange,\n  acceptAllChanges,\n  rejectAllChanges\n} from \"./preposition.js\";\n\n// — Log immediately when the commands bundle loads —\nconsole.log(\"⭐ commands.js loaded\");\n\nOffice.onReady(info => {\n  console.log(\"▶️ Office.onReady\", info);\n\n  if (info.host === Office.HostType.Word) {\n    console.log(\"🔗 Associating actions…\");\n\n    Office.actions.associate(\"checkDocumentText\",   (...args) => {\n      console.log(\"▶️ OfficeAction invoked: checkDocumentText\", args);\n      return checkDocumentText(...args);\n    });\n\n    Office.actions.associate(\"acceptCurrentChange\", (...args) => {\n      console.log(\"▶️ OfficeAction invoked: acceptCurrentChange\", args);\n      return acceptCurrentChange(...args);\n    });\n\n    Office.actions.associate(\"rejectCurrentChange\", (...args) => {\n      console.log(\"▶️ OfficeAction invoked: rejectCurrentChange\", args);\n      return rejectCurrentChange(...args);\n    });\n\n    Office.actions.associate(\"acceptAllChanges\",    (...args) => {\n      console.log(\"▶️ OfficeAction invoked: acceptAllChanges\", args);\n      return acceptAllChanges(...args);\n    });\n\n    Office.actions.associate(\"rejectAllChanges\",    (...args) => {\n      console.log(\"▶️ OfficeAction invoked: rejectAllChanges\", args);\n      return rejectAllChanges(...args);\n    });\n\n    console.log(\"✅ Actions associated\");\n  }\n});\n"],"names":["state","errors","currentIndex","isChecking","NOTIF_ID","clearNotification","id","Office","NotificationMessages","deleteAsync","showNotification","opts","addAsync","determineCorrectPreposition","rawWord","m","normalize","match","c","toLowerCase","unvoiced","Set","key","test","has","console","log","onReady","info","host","HostType","Word","actions","associate","_len","arguments","length","args","Array","_key","async","run","oldS","context","document","body","search","matchWholeWord","matchCase","oldZ","load","sync","items","forEach","r","font","highlightColor","sRes","zRes","raw","text","trim","actualLower","after","getRange","getNextTextRange","nxt","expectedLower","suggestion","toUpperCase","trackedObjects","add","push","range","first","select","type","message","icon","e","error","checkDocumentText","_len2","_key2","splice","insertText","InsertLocation","replace","next","acceptCurrentChange","_len3","_key3","rejectCurrentChange","_len4","_key4","acceptAllChanges","_len5","_key5","rejectAllChanges"],"sourceRoot":""}