{"version":3,"file":"commands.js","mappings":"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","sources":["webpack://office-addin-taskpane-js/./src/commands/preposition.js","webpack://office-addin-taskpane-js/./src/commands/commands.js"],"sourcesContent":["/* global Office, Word */\r\n\r\nlet state = {\r\n  errors: [],\r\n  currentIndex: 0,\r\n  isChecking: false\r\n};\r\n\r\nconst HIGHLIGHT_COLOR = \"#FFC0CB\";\r\nconst NOTIF_ID        = \"noErrors\";\r\n\r\nfunction clearNotification(id) {\r\n  if (Office.NotificationMessages?.deleteAsync) {\r\n    Office.NotificationMessages.deleteAsync(id);\r\n  }\r\n}\r\n\r\nfunction showNotification(id, options) {\r\n  if (Office.NotificationMessages?.addAsync) {\r\n    Office.NotificationMessages.addAsync(id, options);\r\n  }\r\n}\r\n\r\nfunction determineCorrectPreposition(rawWord) {\r\n  if (!rawWord) return null;\r\n  const m = rawWord.normalize(\"NFC\").match(/[\\p{L}0-9]/u);\r\n  if (!m) return null;\r\n  const first = m[0].toLowerCase();\r\n  const unvoiced = new Set(['c','č','f','h','k','p','s','š','t']);\r\n  const numMap   = { '1':'e','2':'d','3':'t','4':'š','5':'p','6':'š','7':'s','8':'o','9':'d','0':'n' };\r\n  if (/\\d/.test(first)) return unvoiced.has(numMap[first]) ? \"s\" : \"z\";\r\n  return unvoiced.has(first) ? \"s\" : \"z\";\r\n}\r\n\r\n// --- CORE: find and highlight errors ---\r\nexport async function checkDocumentText() {\r\n  if (state.isChecking) return;\r\n  state.isChecking = true;\r\n  clearNotification(NOTIF_ID);\r\n\r\n  try {\r\n    await Word.run(async context => {\r\n      // reset previous highlights & state\r\n      state.errors.forEach(e => e.range.font.highlightColor = null);\r\n      state.errors = [];\r\n      state.currentIndex = 0;\r\n\r\n      const opts = { matchCase: false, matchWholeWord: true };\r\n      const sRes = context.document.body.search(\"s\", opts);\r\n      const zRes = context.document.body.search(\"z\", opts);\r\n      sRes.load(\"items\");\r\n      zRes.load(\"items\");\r\n      await context.sync();\r\n\r\n      const all = [...sRes.items, ...zRes.items]\r\n        .filter(r => {\r\n          const t = r.text.trim().toLowerCase();\r\n          return t === \"s\" || t === \"z\";\r\n        });\r\n\r\n      for (const prep of all) {\r\n        const after = prep\r\n          .getRange(\"After\")\r\n          .getNextTextRange([\" \", \"\\n\", \".\", \",\", \";\", \"?\", \"!\"], true);\r\n        after.load(\"text\");\r\n        await context.sync();\r\n\r\n        const nxt = after.text.trim();\r\n        if (!nxt) continue;\r\n        const actual = prep.text.trim().toLowerCase();\r\n        const expect = determineCorrectPreposition(nxt);\r\n        if (expect && actual !== expect) {\r\n          context.trackedObjects.add(prep);\r\n          state.errors.push({ range: prep, suggestion: expect });\r\n        }\r\n      }\r\n\r\n      if (!state.errors.length) {\r\n        showNotification(NOTIF_ID, {\r\n          type: \"informationalMessage\",\r\n          message: \"✨ No mismatches!\",\r\n          icon: \"Icon.80x80\"\r\n        });\r\n      } else {\r\n        // highlight all and select the first one\r\n        state.errors.forEach(e => e.range.font.highlightColor = HIGHLIGHT_COLOR);\r\n        await context.sync();\r\n        const first = state.errors[0].range;\r\n        context.trackedObjects.add(first);\r\n        first.select();\r\n        await context.sync();\r\n      }\r\n    });\r\n  } catch (e) {\r\n    console.error(\"checkDocumentText error\", e);\r\n    showNotification(NOTIF_ID, {\r\n      type: \"errorMessage\",\r\n      message: \"Check failed; please try again.\"\r\n    });\r\n  } finally {\r\n    state.isChecking = false;\r\n  }\r\n}\r\n\r\n// --- Accept one: replace current and auto-advance ---\r\nexport async function acceptCurrentChange() {\r\n  if (state.currentIndex >= state.errors.length) return;\r\n\r\n  try {\r\n    await Word.run(async context => {\r\n      const err = state.errors[state.currentIndex];\r\n      context.trackedObjects.add(err.range);\r\n\r\n      // replace text and clear highlight\r\n      err.range.insertText(err.suggestion, Word.InsertLocation.replace);\r\n      err.range.font.highlightColor = null;\r\n\r\n      // advance to next and select it\r\n      state.currentIndex++;\r\n      if (state.currentIndex < state.errors.length) {\r\n        const next = state.errors[state.currentIndex].range;\r\n        context.trackedObjects.add(next);\r\n        next.select();\r\n      }\r\n\r\n      await context.sync();\r\n    });\r\n  } catch (e) {\r\n    console.error(\"acceptCurrentChange error\", e);\r\n  }\r\n}\r\n\r\n// --- Reject one: clear highlight and auto-advance ---\r\nexport async function rejectCurrentChange() {\r\n  if (state.currentIndex >= state.errors.length) return;\r\n\r\n  try {\r\n    await Word.run(async context => {\r\n      const err = state.errors[state.currentIndex];\r\n      context.trackedObjects.add(err.range);\r\n\r\n      // clear highlight\r\n      err.range.font.highlightColor = null;\r\n\r\n      // advance to next and select it\r\n      state.currentIndex++;\r\n      if (state.currentIndex < state.errors.length) {\r\n        const next = state.errors[state.currentIndex].range;\r\n        context.trackedObjects.add(next);\r\n        next.select();\r\n      }\r\n\r\n      await context.sync();\r\n    });\r\n  } catch (e) {\r\n    console.error(\"rejectCurrentChange error\", e);\r\n  }\r\n}\r\n\r\n// --- Accept all: replace every mismatch at once ---\r\nexport async function acceptAllChanges() {\r\n  if (!state.errors.length) return;\r\n\r\n  try {\r\n    await Word.run(async context => {\r\n      for (const err of state.errors) {\r\n        context.trackedObjects.add(err.range);\r\n        err.range.insertText(err.suggestion, Word.InsertLocation.replace);\r\n        err.range.font.highlightColor = null;\r\n      }\r\n      await context.sync();\r\n    });\r\n\r\n    state.errors = [];\r\n    state.currentIndex = 0;\r\n    showNotification(NOTIF_ID, {\r\n      type: \"informationalMessage\",\r\n      message: \"Accepted all mismatches!\",\r\n      icon: \"Icon.80x80\"\r\n    });\r\n  } catch (e) {\r\n    console.error(\"acceptAllChanges error\", e);\r\n  }\r\n}\r\n\r\n// --- Reject all: clear all highlights at once ---\r\nexport async function rejectAllChanges() {\r\n  if (!state.errors.length) return;\r\n\r\n  try {\r\n    await Word.run(async context => {\r\n      for (const err of state.errors) {\r\n        context.trackedObjects.add(err.range);\r\n        err.range.font.highlightColor = null;\r\n      }\r\n      await context.sync();\r\n    });\r\n\r\n    state.errors = [];\r\n    state.currentIndex = 0;\r\n    showNotification(NOTIF_ID, {\r\n      type: \"informationalMessage\",\r\n      message: \"Cleared all highlights!\",\r\n      icon: \"Icon.80x80\"\r\n    });\r\n  } catch (e) {\r\n    console.error(\"rejectAllChanges error\", e);\r\n  }\r\n}\r\n","/* global document, Office */\nimport {\n  checkDocumentText,\n  acceptCurrentChange,\n  rejectCurrentChange,\n  acceptAllChanges,\n  rejectAllChanges\n} from \"./preposition.js\";\n\n// — Log immediately when the commands bundle loads —\nconsole.log(\"⭐ commands.js loaded\");\n\nOffice.onReady(info => {\n  console.log(\"▶️ Office.onReady\", info);\n\n  if (info.host === Office.HostType.Word) {\n    console.log(\"🔗 Associating actions…\");\n\n    Office.actions.associate(\"checkDocumentText\",   (...args) => {\n      console.log(\"▶️ OfficeAction invoked: checkDocumentText\", args);\n      return checkDocumentText(...args);\n    });\n\n    Office.actions.associate(\"acceptCurrentChange\", (...args) => {\n      console.log(\"▶️ OfficeAction invoked: acceptCurrentChange\", args);\n      return acceptCurrentChange(...args);\n    });\n\n    Office.actions.associate(\"rejectCurrentChange\", (...args) => {\n      console.log(\"▶️ OfficeAction invoked: rejectCurrentChange\", args);\n      return rejectCurrentChange(...args);\n    });\n\n    Office.actions.associate(\"acceptAllChanges\",    (...args) => {\n      console.log(\"▶️ OfficeAction invoked: acceptAllChanges\", args);\n      return acceptAllChanges(...args);\n    });\n\n    Office.actions.associate(\"rejectAllChanges\",    (...args) => {\n      console.log(\"▶️ OfficeAction invoked: rejectAllChanges\", args);\n      return rejectAllChanges(...args);\n    });\n\n    console.log(\"✅ Actions associated\");\n  }\n});\n"],"names":["state","errors","currentIndex","isChecking","NOTIF_ID","showNotification","id","options","Office","NotificationMessages","addAsync","determineCorrectPreposition","rawWord","m","normalize","match","first","toLowerCase","unvoiced","Set","test","has","console","log","onReady","info","host","HostType","Word","actions","associate","_len","arguments","length","args","Array","_key","async","deleteAsync","run","forEach","e","range","font","highlightColor","opts","matchCase","matchWholeWord","sRes","context","document","body","search","zRes","load","sync","all","items","filter","r","t","text","trim","prep","after","getRange","getNextTextRange","nxt","actual","expect","trackedObjects","add","push","suggestion","select","type","message","icon","error","checkDocumentText","_len2","_key2","err","insertText","InsertLocation","replace","next","acceptCurrentChange","_len3","_key3","rejectCurrentChange","_len4","_key4","acceptAllChanges","_len5","_key5","rejectAllChanges"],"sourceRoot":""}