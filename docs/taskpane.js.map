{"version":3,"file":"taskpane.js","mappings":"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","sources":["webpack://office-addin-taskpane-js/./src/commands/preposition.js","webpack://office-addin-taskpane-js/./src/taskpane/taskpane.js"],"sourcesContent":["/* global Office, Word */\r\n\r\nconst state = { errors: [], currentIndex: 0, isChecking: false };\r\nconst HIGHLIGHT_COLOR = \"#FFC0CB\";\r\nconst NOTIF_ID        = \"noErrors\";\r\n\r\nfunction clearNotification(id) {\r\n  if (Office.NotificationMessages?.deleteAsync) {\r\n    Office.NotificationMessages.deleteAsync(id);\r\n  }\r\n}\r\nfunction showNotification(id, opts) {\r\n  if (Office.NotificationMessages?.addAsync) {\r\n    Office.NotificationMessages.addAsync(id, opts);\r\n  }\r\n}\r\n\r\nfunction determineCorrectPreposition(word) {\r\n  if (!word) return null;\r\n  const m = word.normalize(\"NFC\").match(/[\\p{L}0-9]/u);\r\n  if (!m) return null;\r\n  const c = m[0].toLowerCase();\r\n  const voiceless = new Set(['c','č','f','h','k','p','s','š','t']);\r\n  const digitMap = { '1':'e','2':'d','3':'t','4':'š','5':'p','6':'š','7':'s','8':'o','9':'d','0':'n' };\r\n  const key = /\\d/.test(c) ? digitMap[c] : c;\r\n  return voiceless.has(key) ? \"s\" : \"z\";\r\n}\r\n\r\nexport async function checkDocumentText() {\r\n  if (state.isChecking) return;\r\n  state.isChecking = true;\r\n  clearNotification(NOTIF_ID);\r\n  state.errors = [];\r\n  state.currentIndex = 0;\r\n\r\n  await Word.run(async context => {\r\n    // 1) clear old highlights\r\n    if (state.errors.length) {\r\n      state.errors.forEach(e => {\r\n        context.trackedObjects.add(e.range);\r\n        e.range.font.highlightColor = null;\r\n      });\r\n      await context.sync();\r\n    }\r\n\r\n    // 2) find standalone s/z\r\n    const opts = { matchWholeWord: true, matchCase: false };\r\n    const sRes = context.document.body.search(\"s\", opts);\r\n    const zRes = context.document.body.search(\"z\", opts);\r\n    sRes.load(\"items\"); zRes.load(\"items\");\r\n    await context.sync();\r\n\r\n    const candidates = [...sRes.items, ...zRes.items]\r\n      .filter(r => ['s','z'].includes(r.text.trim().toLowerCase()));\r\n\r\n    // 3) evaluate each\r\n    for (const r of candidates) {\r\n      const after = r.getRange(\"After\")\r\n                     .getNextTextRange([\" \", \"\\n\", \".\", \",\", \";\", \"?\", \"!\"], true);\r\n      after.load(\"text\");\r\n      await context.sync();\r\n\r\n      const nxt = after.text.trim();\r\n      if (!nxt) continue;\r\n      const actual   = r.text.trim().toLowerCase();\r\n      const expected = determineCorrectPreposition(nxt);\r\n      if (expected && actual !== expected) {\r\n        context.trackedObjects.add(r);\r\n        r.font.highlightColor = HIGHLIGHT_COLOR;\r\n        state.errors.push({ range: r, suggestion: expected });\r\n      }\r\n    }\r\n\r\n    if (!state.errors.length) {\r\n      showNotification(NOTIF_ID, {\r\n        type: \"informationalMessage\",\r\n        message: \"✨ No mismatches!\",\r\n        icon: \"Icon.80x80\"\r\n      });\r\n    } else {\r\n      // select first mismatch\r\n      const first = state.errors[0].range;\r\n      context.trackedObjects.add(first);\r\n      first.select();\r\n      await context.sync();\r\n    }\r\n  }).catch(e => {\r\n    console.error(e);\r\n    showNotification(NOTIF_ID, { type: \"errorMessage\", message: \"Check failed\" });\r\n  }).finally(() => {\r\n    state.isChecking = false;\r\n  });\r\n}\r\n\r\nexport async function acceptCurrentChange() {\r\n  if (!state.errors.length) return;\r\n  const { suggestion } = state.errors.shift();\r\n  await Word.run(async context => {\r\n    const sel = context.document.getSelection();\r\n    sel.insertText(suggestion, Word.InsertLocation.replace);\r\n    sel.font.highlightColor = null;\r\n    if (state.errors.length) {\r\n      const next = state.errors[0].range;\r\n      context.trackedObjects.add(next);\r\n      next.select();\r\n    }\r\n    await context.sync();\r\n  }).catch(console.error);\r\n}\r\n\r\nexport async function rejectCurrentChange() {\r\n  if (!state.errors.length) return;\r\n  state.errors.shift();\r\n  await Word.run(async context => {\r\n    const sel = context.document.getSelection();\r\n    sel.font.highlightColor = null;\r\n    if (state.errors.length) {\r\n      const next = state.errors[0].range;\r\n      context.trackedObjects.add(next);\r\n      next.select();\r\n    }\r\n    await context.sync();\r\n  }).catch(console.error);\r\n}\r\n\r\nexport async function acceptAllChanges() {\r\n  if (!state.errors.length) return;\r\n  await Word.run(async context => {\r\n    for (const { range, suggestion } of state.errors) {\r\n      context.trackedObjects.add(range);\r\n      range.insertText(suggestion, Word.InsertLocation.replace);\r\n      range.font.highlightColor = null;\r\n    }\r\n    await context.sync();\r\n  }).catch(console.error);\r\n  state.errors = [];\r\n  showNotification(NOTIF_ID, {\r\n    type: \"informationalMessage\",\r\n    message: \"Accepted all!\",\r\n    icon: \"Icon.80x80\"\r\n  });\r\n}\r\n\r\nexport async function rejectAllChanges() {\r\n  if (!state.errors.length) return;\r\n  await Word.run(async context => {\r\n    for (const { range } of state.errors) {\r\n      context.trackedObjects.add(range);\r\n      range.font.highlightColor = null;\r\n    }\r\n    await context.sync();\r\n  }).catch(console.error);\r\n  state.errors = [];\r\n  showNotification(NOTIF_ID, {\r\n    type: \"informationalMessage\",\r\n    message: \"Cleared all!\",\r\n    icon: \"Icon.80x80\"\r\n  });\r\n}\r\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n * See LICENSE in the project root for license information.\n */\n\n/* global document, Office */\n\nimport {\n  checkDocumentText,\n  acceptCurrentChange,\n  rejectCurrentChange,\n  acceptAllChanges,\n  rejectAllChanges\n} from \"../commands/preposition.js\";\n\nOffice.onReady(info => {\n  if (info.host === Office.HostType.Word) {\n    document.getElementById(\"checkTextButton\").onclick   = checkDocumentText;\n    document.getElementById(\"acceptChangeButton\").onclick = acceptCurrentChange;\n    document.getElementById(\"rejectChangeButton\").onclick = rejectCurrentChange;\n    document.getElementById(\"acceptAllButton\").onclick    = acceptAllChanges;\n    document.getElementById(\"rejectAllButton\").onclick    = rejectAllChanges;\n  }\n});\n"],"names":["state","errors","currentIndex","isChecking","NOTIF_ID","showNotification","id","opts","Office","NotificationMessages","addAsync","determineCorrectPreposition","word","m","normalize","match","c","toLowerCase","voiceless","Set","key","test","has","async","checkDocumentText","deleteAsync","Word","run","length","forEach","e","context","trackedObjects","add","range","font","highlightColor","sync","matchWholeWord","matchCase","sRes","document","body","search","zRes","load","candidates","items","filter","r","includes","text","trim","after","getRange","getNextTextRange","nxt","actual","expected","push","suggestion","first","select","type","message","icon","catch","console","error","finally","acceptCurrentChange","shift","sel","getSelection","insertText","InsertLocation","replace","next","rejectCurrentChange","acceptAllChanges","rejectAllChanges","onReady","info","host","HostType","getElementById","onclick"],"sourceRoot":""}