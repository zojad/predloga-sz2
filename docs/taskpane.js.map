{"version":3,"file":"taskpane.js","mappings":"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","sources":["webpack://office-addin-taskpane-js/./src/commands/preposition.js","webpack://office-addin-taskpane-js/./src/taskpane/taskpane.js"],"sourcesContent":["/* global Office, Word */\r\n\r\nlet state = {\r\n  errors: [],\r\n  currentIndex: 0,\r\n  isChecking: false\r\n};\r\n\r\nconst HIGHLIGHT_COLOR = \"#FFC0CB\";\r\nconst NOTIF_ID        = \"noErrors\";\r\n\r\nfunction clearNotification(id) {\r\n  if (Office.NotificationMessages && typeof Office.NotificationMessages.deleteAsync === \"function\") {\r\n    Office.NotificationMessages.deleteAsync(id);\r\n  }\r\n}\r\n\r\nfunction showNotification(id, options) {\r\n  if (Office.NotificationMessages && typeof Office.NotificationMessages.addAsync === \"function\") {\r\n    Office.NotificationMessages.addAsync(id, options);\r\n  }\r\n}\r\n\r\nfunction determineCorrectPreposition(rawWord) {\r\n  if (!rawWord) return null;\r\n  const normalized = rawWord.normalize(\"NFC\");\r\n  const match = normalized.match(/[\\p{L}0-9]/u);\r\n  if (!match) return null;\r\n  const first = match[0].toLowerCase();\r\n  const unvoiced = new Set(['c','č','f','h','k','p','s','š','t']);\r\n  const numMap = {'1':'e','2':'d','3':'t','4':'š','5':'p','6':'š','7':'s','8':'o','9':'d','0':'n'};\r\n\r\n  if (/\\d/.test(first)) {\r\n    return unvoiced.has(numMap[first]) ? \"s\" : \"z\";\r\n  }\r\n  return unvoiced.has(first) ? \"s\" : \"z\";\r\n}\r\n\r\nexport async function checkDocumentText() {\r\n  if (state.isChecking) return;\r\n  state.isChecking = true;\r\n  clearNotification(NOTIF_ID);\r\n  state.currentIndex = 0;\r\n\r\n  try {\r\n    await Word.run(async context => {\r\n      // Clear previous highlights\r\n      state.errors.forEach(e => e.range.font.highlightColor = null);\r\n      state.errors = [];\r\n\r\n      // Search for standalone 's' and 'z'\r\n      const opts = { matchCase: false, matchWholeWord: true };\r\n      const sRes = context.document.body.search(\"s\", opts);\r\n      const zRes = context.document.body.search(\"z\", opts);\r\n      sRes.load(\"items\");\r\n      zRes.load(\"items\");\r\n      await context.sync();\r\n\r\n      // Collect mismatches\r\n      const candidates = [...sRes.items, ...zRes.items].filter(r => {\r\n        const txt = r.text.trim().toLowerCase();\r\n        return txt === 's' || txt === 'z';\r\n      });\r\n\r\n      for (const prep of candidates) {\r\n        const after = prep.getRange(\"After\");\r\n        const nextRange = after.getNextTextRange([\" \", \"\\n\", \".\", \",\", \";\", \"?\", \"!\"], true);\r\n        nextRange.load(\"text\");\r\n        await context.sync();\r\n\r\n        const nextWord = nextRange.text.trim();\r\n        if (!nextWord) continue;\r\n        const actual = prep.text.trim().toLowerCase();\r\n        const expect = determineCorrectPreposition(nextWord);\r\n        if (expect && actual !== expect) {\r\n          context.trackedObjects.add(prep);\r\n          state.errors.push({ range: prep, suggestion: expect });\r\n        }\r\n      }\r\n\r\n      // Highlight and select first mismatch\r\n      if (state.errors.length > 0) {\r\n        state.errors.forEach(e => e.range.font.highlightColor = HIGHLIGHT_COLOR);\r\n        await context.sync();\r\n        const firstRange = state.errors[0].range;\r\n        context.trackedObjects.add(firstRange);\r\n        firstRange.select();\r\n        await context.sync();\r\n      } else {\r\n        showNotification(NOTIF_ID, {\r\n          type: \"informationalMessage\",\r\n          message: \"✨ No 's'/'z' mismatches!\",\r\n          icon: \"Icon.80x80\"\r\n        });\r\n      }\r\n    });\r\n  } catch (e) {\r\n    console.error(\"checkDocumentText error\", e);\r\n    showNotification(\"checkError\", {\r\n      type: \"errorMessage\",\r\n      message: \"Check failed; please try again.\",\r\n      persistent: false\r\n    });\r\n  } finally {\r\n    state.isChecking = false;\r\n  }\r\n}\r\n\r\nexport async function acceptCurrentChange() {\r\n  if (state.currentIndex >= state.errors.length) return;\r\n  try {\r\n    await Word.run(async context => {\r\n      const err = state.errors[state.currentIndex];\r\n      context.trackedObjects.add(err.range);\r\n      err.range.insertText(err.suggestion, Word.InsertLocation.replace);\r\n      err.range.font.highlightColor = null;\r\n      await context.sync();\r\n\r\n      // Advance index and select next\r\n      state.currentIndex++;\r\n      if (state.currentIndex < state.errors.length) {\r\n        const nextErr = state.errors[state.currentIndex].range;\r\n        context.trackedObjects.add(nextErr);\r\n        nextErr.select();\r\n        await context.sync();\r\n      }\r\n    });\r\n  } catch (e) {\r\n    console.error(\"acceptCurrentChange error\", e);\r\n  }\r\n}\r\n\r\nexport async function rejectCurrentChange() {\r\n  if (state.currentIndex >= state.errors.length) return;\r\n  try {\r\n    await Word.run(async context => {\r\n      const err = state.errors[state.currentIndex];\r\n      context.trackedObjects.add(err.range);\r\n      err.range.font.highlightColor = null;\r\n      await context.sync();\r\n\r\n      // Advance index and select next\r\n      state.currentIndex++;\r\n      if (state.currentIndex < state.errors.length) {\r\n        const nextErr = state.errors[state.currentIndex].range;\r\n        context.trackedObjects.add(nextErr);\r\n        nextErr.select();\r\n        await context.sync();\r\n      }\r\n    });\r\n  } catch (e) {\r\n    console.error(\"rejectCurrentChange error\", e);\r\n  }\r\n}\r\n\r\nexport async function acceptAllChanges() {\r\n  if (state.errors.length === 0) return;\r\n  try {\r\n    await Word.run(async context => {\r\n      for (const err of state.errors) {\r\n        context.trackedObjects.add(err.range);\r\n        err.range.insertText(err.suggestion, Word.InsertLocation.replace);\r\n        err.range.font.highlightColor = null;\r\n        await context.sync();\r\n      }\r\n      state.currentIndex = state.errors.length;\r\n    });\r\n  } catch (e) {\r\n    console.error(\"acceptAllChanges error\", e);\r\n  }\r\n}\r\n\r\nexport async function rejectAllChanges() {\r\n  if (state.errors.length === 0) return;\r\n  try {\r\n    await Word.run(async context => {\r\n      for (const err of state.errors) {\r\n        context.trackedObjects.add(err.range);\r\n        err.range.font.highlightColor = null;\r\n        await context.sync();\r\n      }\r\n      state.currentIndex = state.errors.length;\r\n    });\r\n  } catch (e) {\r\n    console.error(\"rejectAllChanges error\", e);\r\n  }\r\n}\r\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n * See LICENSE in the project root for license information.\n */\n\n/* global document, Office */\n\nimport {\n  checkDocumentText,\n  acceptCurrentChange,\n  rejectCurrentChange,\n  acceptAllChanges,\n  rejectAllChanges\n} from \"../commands/preposition.js\";\n\nOffice.onReady(info => {\n  if (info.host === Office.HostType.Word) {\n    document.getElementById(\"checkTextButton\").onclick   = checkDocumentText;\n    document.getElementById(\"acceptChangeButton\").onclick = acceptCurrentChange;\n    document.getElementById(\"rejectChangeButton\").onclick = rejectCurrentChange;\n    document.getElementById(\"acceptAllButton\").onclick    = acceptAllChanges;\n    document.getElementById(\"rejectAllButton\").onclick    = rejectAllChanges;\n  }\n});\n"],"names":["state","errors","currentIndex","isChecking","NOTIF_ID","showNotification","id","options","Office","NotificationMessages","addAsync","determineCorrectPreposition","rawWord","match","normalize","first","toLowerCase","unvoiced","Set","test","has","async","checkDocumentText","deleteAsync","Word","run","forEach","e","range","font","highlightColor","opts","matchCase","matchWholeWord","sRes","context","document","body","search","zRes","load","sync","candidates","items","filter","r","txt","text","trim","prep","nextRange","getRange","getNextTextRange","nextWord","actual","expect","trackedObjects","add","push","suggestion","length","firstRange","select","type","message","icon","console","error","persistent","acceptCurrentChange","err","insertText","InsertLocation","replace","nextErr","rejectCurrentChange","acceptAllChanges","rejectAllChanges","onReady","info","host","HostType","getElementById","onclick"],"sourceRoot":""}