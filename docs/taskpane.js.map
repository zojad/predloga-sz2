{"version":3,"file":"taskpane.js","mappings":"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","sources":["webpack://office-addin-taskpane-js/./src/commands/preposition.js","webpack://office-addin-taskpane-js/./src/taskpane/taskpane.js"],"sourcesContent":["/* global Office, Word */\r\n\r\nlet state = {\r\n  errors: [],\r\n  currentIndex: 0,\r\n  isChecking: false\r\n};\r\n\r\nconst HIGHLIGHT_COLOR = \"#FFC0CB\";\r\nconst NOTIF_ID = \"noErrors\";\r\n\r\nfunction clearNotification(id) {\r\n  if (Office.NotificationMessages && typeof Office.NotificationMessages.deleteAsync === \"function\") {\r\n    Office.NotificationMessages.deleteAsync(id);\r\n  }\r\n}\r\n\r\nfunction showNotification(id, options) {\r\n  if (Office.NotificationMessages && typeof Office.NotificationMessages.addAsync === \"function\") {\r\n    Office.NotificationMessages.addAsync(id, options);\r\n  }\r\n}\r\n\r\nfunction determineCorrectPreposition(rawWord) {\r\n  if (!rawWord) return null;\r\n  const w = rawWord.normalize(\"NFC\");\r\n  const m = w.match(/[\\p{L}0-9]/u);\r\n  if (!m) return null;\r\n  const first = m[0].toLowerCase();\r\n  const unvoiced = new Set(['c','č','f','h','k','p','s','š','t']);\r\n  const numMap = {'1':'e','2':'d','3':'t','4':'š','5':'p','6':'š','7':'s','8':'o','9':'d','0':'n'};\r\n  if (/\\d/.test(first)) {\r\n    return unvoiced.has(numMap[first]) ? 's' : 'z';\r\n  }\r\n  return unvoiced.has(first) ? 's' : 'z';\r\n}\r\n\r\nexport async function checkDocumentText() {\r\n  if (state.isChecking) return;\r\n  state.isChecking = true;\r\n  clearNotification(NOTIF_ID);\r\n  state.currentIndex = 0;\r\n\r\n  try {\r\n    await Word.run(async context => {\r\n      // clear previous highlights\r\n      state.errors.forEach(e => e.range.font.highlightColor = null);\r\n      state.errors = [];\r\n\r\n      // search standalone 's' and 'z'\r\n      const opts = { matchCase: false, matchWholeWord: true };\r\n      const sRes = context.document.body.search('s', opts);\r\n      const zRes = context.document.body.search('z', opts);\r\n      sRes.load('items'); zRes.load('items');\r\n      await context.sync();\r\n\r\n      // filter exact 's' or 'z'\r\n      const candidates = [...sRes.items, ...zRes.items].filter(r => {\r\n        const t = r.text.trim().toLowerCase();\r\n        return t === 's' || t === 'z';\r\n      });\r\n\r\n      // check each candidate\r\n      for (const prep of candidates) {\r\n        const after = prep.getRange('After');\r\n        const nxtRange = after.getNextTextRange([' ', '\\n', '.', ',', ';', '?', '!'], true);\r\n        nxtRange.load('text');\r\n        await context.sync();\r\n        const nxt = nxtRange.text.trim();\r\n        if (!nxt) continue;\r\n        const actual = prep.text.trim().toLowerCase();\r\n        const expect = determineCorrectPreposition(nxt);\r\n        if (expect && actual !== expect) {\r\n          context.trackedObjects.add(prep);\r\n          state.errors.push({ range: prep, suggestion: expect });\r\n        }\r\n      }\r\n\r\n      if (state.errors.length === 0) {\r\n        showNotification(NOTIF_ID, { type: 'informationalMessage', message: \"✨ No mismatches!\", icon: 'Icon.80x80' });\r\n      } else {\r\n        // highlight all and select first\r\n        state.errors.forEach(e => e.range.font.highlightColor = HIGHLIGHT_COLOR);\r\n        await context.sync();\r\n        const first = state.errors[0].range;\r\n        context.trackedObjects.add(first);\r\n        first.select();\r\n        await context.sync();\r\n      }\r\n    });\r\n  } catch (e) {\r\n    console.error('checkDocumentText error', e);\r\n    showNotification('checkError', { type: 'errorMessage', message: 'Check failed', persistent: false });\r\n  } finally {\r\n    state.isChecking = false;\r\n  }\r\n}\r\n\r\nexport async function acceptCurrentChange() {\r\n  if (state.currentIndex >= state.errors.length) return;\r\n  const err = state.errors[state.currentIndex];\r\n  try {\r\n    await Word.run(async context => {\r\n      context.trackedObjects.add(err.range);\r\n      err.range.insertText(err.suggestion, Word.InsertLocation.replace);\r\n      err.range.font.highlightColor = null;\r\n      await context.sync();\r\n      // advance and select next\r\n      state.currentIndex++;\r\n      if (state.currentIndex < state.errors.length) {\r\n        const nextErr = state.errors[state.currentIndex].range;\r\n        context.trackedObjects.add(nextErr);\r\n        nextErr.select();\r\n        await context.sync();\r\n      }\r\n    });\r\n  } catch (e) {\r\n    console.error('acceptCurrentChange error', e);\r\n  }\r\n}\r\n\r\nexport async function rejectCurrentChange() {\r\n  if (state.currentIndex >= state.errors.length) return;\r\n  const err = state.errors[state.currentIndex];\r\n  try {\r\n    await Word.run(async context => {\r\n      context.trackedObjects.add(err.range);\r\n      err.range.font.highlightColor = null;\r\n      await context.sync();\r\n      // advance and select next\r\n      state.currentIndex++;\r\n      if (state.currentIndex < state.errors.length) {\r\n        const nextErr = state.errors[state.currentIndex].range;\r\n        context.trackedObjects.add(nextErr);\r\n        nextErr.select();\r\n        await context.sync();\r\n      }\r\n    });\r\n  } catch (e) {\r\n    console.error('rejectCurrentChange error', e);\r\n  }\r\n}\r\n\r\nexport async function acceptAllChanges() {\r\n  if (state.errors.length === 0) return;\r\n  try {\r\n    await Word.run(async context => {\r\n      for (const err of state.errors) {\r\n        context.trackedObjects.add(err.range);\r\n        err.range.insertText(err.suggestion, Word.InsertLocation.replace);\r\n        err.range.font.highlightColor = null;\r\n        await context.sync();\r\n      }\r\n      state.currentIndex = state.errors.length;\r\n    });\r\n  } catch (e) {\r\n    console.error('acceptAllChanges error', e);\r\n  }\r\n}\r\n\r\nexport async function rejectAllChanges() {\r\n  if (state.errors.length === 0) return;\r\n  try {\r\n    await Word.run(async context => {\r\n      for (const err of state.errors) {\r\n        context.trackedObjects.add(err.range);\r\n        err.range.font.highlightColor = null;\r\n        await context.sync();\r\n      }\r\n      state.currentIndex = state.errors.length;\r\n    });\r\n  } catch (e) {\r\n    console.error('rejectAllChanges error', e);\r\n  }\r\n}\r\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n * See LICENSE in the project root for license information.\n */\n\n/* global document, Office */\n\nimport {\n  checkDocumentText,\n  acceptCurrentChange,\n  rejectCurrentChange,\n  acceptAllChanges,\n  rejectAllChanges\n} from \"../commands/preposition.js\";\n\nOffice.onReady(info => {\n  if (info.host === Office.HostType.Word) {\n    document.getElementById(\"checkTextButton\").onclick   = checkDocumentText;\n    document.getElementById(\"acceptChangeButton\").onclick = acceptCurrentChange;\n    document.getElementById(\"rejectChangeButton\").onclick = rejectCurrentChange;\n    document.getElementById(\"acceptAllButton\").onclick    = acceptAllChanges;\n    document.getElementById(\"rejectAllButton\").onclick    = rejectAllChanges;\n  }\n});\n"],"names":["state","errors","currentIndex","isChecking","NOTIF_ID","showNotification","id","options","Office","NotificationMessages","addAsync","determineCorrectPreposition","rawWord","m","normalize","match","first","toLowerCase","unvoiced","Set","test","has","async","checkDocumentText","deleteAsync","Word","run","forEach","e","range","font","highlightColor","opts","matchCase","matchWholeWord","sRes","context","document","body","search","zRes","load","sync","candidates","items","filter","r","t","text","trim","prep","nxtRange","getRange","getNextTextRange","nxt","actual","expect","trackedObjects","add","push","suggestion","length","type","message","icon","select","console","error","persistent","acceptCurrentChange","err","insertText","InsertLocation","replace","nextErr","rejectCurrentChange","acceptAllChanges","rejectAllChanges","onReady","info","host","HostType","getElementById","onclick"],"sourceRoot":""}