{"version":3,"file":"taskpane.js","mappings":"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","sources":["webpack://office-addin-taskpane-js/./src/commands/preposition.js","webpack://office-addin-taskpane-js/./src/taskpane/taskpane.js"],"sourcesContent":["/* global Office, Word */\r\n\r\nlet state = {\r\n  errors: [],\r\n  currentIndex: 0,\r\n  isChecking: false\r\n};\r\n\r\nconst HIGHLIGHT_COLOR = \"#FFC0CB\";\r\nconst NOTIF_ID = \"noErrors\";\r\n\r\nfunction clearNotification(id) {\r\n  if (Office.NotificationMessages && typeof Office.NotificationMessages.deleteAsync === \"function\") {\r\n    Office.NotificationMessages.deleteAsync(id);\r\n  }\r\n}\r\n\r\nfunction showNotification(id, options) {\r\n  if (Office.NotificationMessages && typeof Office.NotificationMessages.addAsync === \"function\") {\r\n    Office.NotificationMessages.addAsync(id, options);\r\n  }\r\n}\r\n\r\nfunction determineCorrectPreposition(rawWord) {\r\n  if (!rawWord) return null;\r\n  const match = rawWord.normalize(\"NFC\").match(/[\\p{L}0-9]/u);\r\n  if (!match) return null;\r\n  const first = match[0].toLowerCase();\r\n  const unvoiced = new Set(['c','č','f','h','k','p','s','š','t']);\r\n  const numMap = {'1':'e','2':'d','3':'t','4':'š','5':'p','6':'š','7':'s','8':'o','9':'d','0':'n'};\r\n  return (/[0-9]/.test(first)\r\n    ? (unvoiced.has(numMap[first]) ? 's' : 'z')\r\n    : (unvoiced.has(first) ? 's' : 'z')\r\n  );\r\n}\r\n\r\nexport async function checkDocumentText() {\r\n  if (state.isChecking) return;\r\n  state.isChecking = true;\r\n  clearNotification(NOTIF_ID);\r\n  state.currentIndex = 0;\r\n\r\n  try {\r\n    await Word.run(async context => {\r\n      // Clear previous highlights\r\n      state.errors.forEach(e => e.range.font.highlightColor = null);\r\n      state.errors = [];\r\n\r\n      // Search for standalone 's' and 'z'\r\n      const opts = { matchCase: false, matchWholeWord: true };\r\n      const sRes = context.document.body.search(\"s\", opts);\r\n      const zRes = context.document.body.search(\"z\", opts);\r\n      sRes.load(\"items\"); zRes.load(\"items\");\r\n      await context.sync();\r\n\r\n      const all = [...sRes.items, ...zRes.items];\r\n      for (const prep of all) {\r\n        const after = prep.getRange(\"After\");\r\n        const nextRange = after.getNextTextRange([\" \",\"\\n\",\".\",\",\",\";\",\"?\",\"!\"], true);\r\n        nextRange.load(\"text\");\r\n        await context.sync();\r\n\r\n        const nxt = nextRange.text.trim();\r\n        if (!nxt) continue;\r\n        const actual = prep.text.trim().toLowerCase();\r\n        const expect = determineCorrectPreposition(nxt);\r\n        if (expect && actual !== expect) {\r\n          context.trackedObjects.add(prep);\r\n          state.errors.push({ range: prep, suggestion: expect });\r\n        }\r\n      }\r\n\r\n      // Highlight and select first\r\n      if (state.errors.length) {\r\n        state.errors.forEach(e => e.range.font.highlightColor = HIGHLIGHT_COLOR);\r\n        await context.sync();\r\n        const first = state.errors[0].range;\r\n        context.trackedObjects.add(first);\r\n        first.select();\r\n        await context.sync();\r\n      } else {\r\n        showNotification(NOTIF_ID, { type: 'informationalMessage', message: \"✨ No mismatches!\", icon: 'Icon.80x80' });\r\n      }\r\n    });\r\n  } catch (e) {\r\n    console.error(\"checkDocumentText error\", e);\r\n    showNotification(\"checkError\", { type: 'errorMessage', message: 'Check failed', persistent: false });\r\n  } finally {\r\n    state.isChecking = false;\r\n  }\r\n}\r\n\r\nexport async function acceptCurrentChange() {\r\n  if (state.currentIndex >= state.errors.length) return;\r\n  try {\r\n    await Word.run(async context => {\r\n      const err = state.errors[state.currentIndex];\r\n      context.trackedObjects.add(err.range);\r\n      // Replace and clear highlight\r\n      err.range.insertText(err.suggestion, Word.InsertLocation.replace);\r\n      err.range.font.highlightColor = null;\r\n      await context.sync();\r\n\r\n      // Advance index\r\n      state.currentIndex++;\r\n\r\n      // Select next, if any\r\n      if (state.currentIndex < state.errors.length) {\r\n        const nextErr = state.errors[state.currentIndex];\r\n        context.trackedObjects.add(nextErr.range);\r\n        nextErr.range.select();\r\n        await context.sync();\r\n      }\r\n    });\r\n  } catch (e) {\r\n    console.error(\"acceptCurrentChange error\", e);\r\n  }\r\n}\r\n\r\nexport async function rejectCurrentChange() {\r\n  if (state.currentIndex >= state.errors.length) return;\r\n  try {\r\n    await Word.run(async context => {\r\n      const err = state.errors[state.currentIndex];\r\n      context.trackedObjects.add(err.range);\r\n      // Clear highlight\r\n      err.range.font.highlightColor = null;\r\n      await context.sync();\r\n\r\n      // Advance index\r\n      state.currentIndex++;\r\n\r\n      // Select next, if any\r\n      if (state.currentIndex < state.errors.length) {\r\n        const nextErr = state.errors[state.currentIndex];\r\n        context.trackedObjects.add(nextErr.range);\r\n        nextErr.range.select();\r\n        await context.sync();\r\n      }\r\n    });\r\n  } catch (e) {\r\n    console.error(\"rejectCurrentChange error\", e);\r\n  }\r\n}\r\n\r\nexport async function acceptAllChanges() {\r\n  if (!state.errors.length) return;\r\n  try {\r\n    await Word.run(async context => {\r\n      for (const err of state.errors) {\r\n        context.trackedObjects.add(err.range);\r\n        err.range.insertText(err.suggestion, Word.InsertLocation.replace);\r\n        err.range.font.highlightColor = null;\r\n        await context.sync();\r\n      }\r\n      state.currentIndex = state.errors.length;\r\n    });\r\n  } catch (e) {\r\n    console.error(\"acceptAllChanges error\", e);\r\n  }\r\n}\r\n\r\nexport async function rejectAllChanges() {\r\n  if (!state.errors.length) return;\r\n  try {\r\n    await Word.run(async context => {\r\n      for (const err of state.errors) {\r\n        context.trackedObjects.add(err.range);\r\n        err.range.font.highlightColor = null;\r\n        await context.sync();\r\n      }\r\n      state.currentIndex = state.errors.length;\r\n    });\r\n  } catch (e) {\r\n    console.error(\"rejectAllChanges error\", e);\r\n  }\r\n}\r\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n * See LICENSE in the project root for license information.\n */\n\n/* global document, Office */\n\nimport {\n  checkDocumentText,\n  acceptCurrentChange,\n  rejectCurrentChange,\n  acceptAllChanges,\n  rejectAllChanges\n} from \"../commands/preposition.js\";\n\nOffice.onReady(info => {\n  if (info.host === Office.HostType.Word) {\n    document.getElementById(\"checkTextButton\").onclick   = checkDocumentText;\n    document.getElementById(\"acceptChangeButton\").onclick = acceptCurrentChange;\n    document.getElementById(\"rejectChangeButton\").onclick = rejectCurrentChange;\n    document.getElementById(\"acceptAllButton\").onclick    = acceptAllChanges;\n    document.getElementById(\"rejectAllButton\").onclick    = rejectAllChanges;\n  }\n});\n"],"names":["state","errors","currentIndex","isChecking","NOTIF_ID","showNotification","id","options","Office","NotificationMessages","addAsync","determineCorrectPreposition","rawWord","match","normalize","first","toLowerCase","unvoiced","Set","test","has","async","checkDocumentText","deleteAsync","Word","run","forEach","e","range","font","highlightColor","opts","matchCase","matchWholeWord","sRes","context","document","body","search","zRes","load","sync","all","items","prep","nextRange","getRange","getNextTextRange","nxt","text","trim","actual","expect","trackedObjects","add","push","suggestion","length","select","type","message","icon","console","error","persistent","acceptCurrentChange","err","insertText","InsertLocation","replace","nextErr","rejectCurrentChange","acceptAllChanges","rejectAllChanges","onReady","info","host","HostType","getElementById","onclick"],"sourceRoot":""}