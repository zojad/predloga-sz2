{"version":3,"file":"taskpane.js","mappings":"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","sources":["webpack://office-addin-taskpane-js/./src/commands/preposition.js","webpack://office-addin-taskpane-js/./src/taskpane/taskpane.js"],"sourcesContent":["/* global Office, Word */\r\n\r\nconst HIGHLIGHT_COLOR = \"#FFC0CB\";\r\nconst NOTIF_ID        = \"noErrors\";\r\n\r\n// Show or clear ribbon notifications\r\nfunction clearNotification(id) {\r\n  if (Office.NotificationMessages?.deleteAsync) {\r\n    Office.NotificationMessages.deleteAsync(id);\r\n  }\r\n}\r\nfunction showNotification(id, opts) {\r\n  if (Office.NotificationMessages?.addAsync) {\r\n    Office.NotificationMessages.addAsync(id, opts);\r\n  }\r\n}\r\n\r\n// Decide “s” vs “z” from the first letter of the next word\r\nfunction determineCorrectPreposition(word) {\r\n  if (!word) return null;\r\n  const m = word.normalize(\"NFC\").match(/[\\p{L}0-9]/u);\r\n  if (!m) return null;\r\n  const c = m[0].toLowerCase();\r\n  const voiceless = new Set(['c','č','f','h','k','p','s','š','t']);\r\n  const digitMap   = { '1':'e','2':'d','3':'t','4':'š','5':'p','6':'š','7':'s','8':'o','9':'d','0':'n' };\r\n  const key = /\\d/.test(c) ? digitMap[c] : c;\r\n  return voiceless.has(key) ? \"s\" : \"z\";\r\n}\r\n\r\n// ─────────────────────────────────────────────────\r\n// 1) Check S/Z: highlight all mismatches & select first\r\n// ─────────────────────────────────────────────────\r\nexport async function checkDocumentText() {\r\n  clearNotification(NOTIF_ID);\r\n\r\n  await Word.run(async context => {\r\n    // Clear any previous highlights\r\n    const prevS = context.document.body.search(\"s\", { matchWholeWord: true, matchCase: false });\r\n    const prevZ = context.document.body.search(\"z\", { matchWholeWord: true, matchCase: false });\r\n    prevS.load(\"items\"); prevZ.load(\"items\");\r\n    await context.sync();\r\n    [...prevS.items, ...prevZ.items].forEach(r => r.font.highlightColor = null);\r\n    await context.sync();\r\n\r\n    // Find all standalone s/z\r\n    const sRes = context.document.body.search(\"s\", { matchWholeWord: true, matchCase: false });\r\n    const zRes = context.document.body.search(\"z\", { matchWholeWord: true, matchCase: false });\r\n    sRes.load(\"items\"); zRes.load(\"items\");\r\n    await context.sync();\r\n\r\n    const mismatches = [];\r\n    for (const r of [...sRes.items, ...zRes.items]) {\r\n      const txt = r.text.trim().toLowerCase();\r\n      if (txt !== \"s\" && txt !== \"z\") continue;\r\n\r\n      // Grab the very next word\r\n      const after = r.getRange(\"After\")\r\n                     .getNextTextRange([\" \", \"\\n\", \".\", \",\", \";\", \"?\", \"!\"], true);\r\n      after.load(\"text\");\r\n      await context.sync();\r\n      const nextWord = after.text.trim();\r\n      if (!nextWord) continue;\r\n\r\n      const expected = determineCorrectPreposition(nextWord);\r\n      if (expected && txt !== expected) {\r\n        r.font.highlightColor = HIGHLIGHT_COLOR;\r\n        mismatches.push(r);\r\n      }\r\n    }\r\n\r\n    if (!mismatches.length) {\r\n      showNotification(NOTIF_ID, {\r\n        type: \"informationalMessage\",\r\n        message: \"✨ No mismatches!\",\r\n        icon: \"Icon.80x80\"\r\n      });\r\n      return;\r\n    }\r\n\r\n    // Select the first mismatch\r\n    const first = mismatches[0];\r\n    first.select();\r\n    await context.sync();\r\n  });\r\n}\r\n\r\n// ─────────────────────────────────────────────────\r\n// 2) Accept One: replace current mismatch & go to next\r\n// ─────────────────────────────────────────────────\r\nexport async function acceptCurrentChange() {\r\n  await Word.run(async context => {\r\n    const sel = context.document.getSelection();\r\n    sel.load(\"text\");\r\n    await context.sync();\r\n\r\n    const actual = sel.text.trim().toLowerCase();\r\n    if (actual !== \"s\" && actual !== \"z\") {\r\n      // nothing to accept here\r\n      return;\r\n    }\r\n\r\n    // Figure out the replacement\r\n    const after = sel.getRange(\"After\")\r\n                     .getNextTextRange([\" \", \"\\n\", \".\", \",\", \";\", \"?\", \"!\"], true);\r\n    after.load(\"text\");\r\n    await context.sync();\r\n    const nextWord = after.text.trim();\r\n    const expected = determineCorrectPreposition(nextWord);\r\n    if (expected && expected !== actual) {\r\n      sel.insertText(expected, Word.InsertLocation.replace);\r\n      sel.font.highlightColor = null;\r\n      await context.sync();\r\n    }\r\n\r\n    // Now find the next mismatch after this spot\r\n    const afterSel = sel.getRange(\"After\");\r\n    const ns = afterSel.search(\"s\", { matchWholeWord: true, matchCase: false });\r\n    const nz = afterSel.search(\"z\", { matchWholeWord: true, matchCase: false });\r\n    ns.load(\"items\"); nz.load(\"items\");\r\n    await context.sync();\r\n\r\n    for (const r of [...ns.items, ...nz.items]) {\r\n      const t = r.text.trim().toLowerCase();\r\n      if (t !== \"s\" && t !== \"z\") continue;\r\n      const a2 = r.getRange(\"After\").getNextTextRange([\" \", \"\\n\", \".\", \",\", \";\", \"?\", \"!\"], true);\r\n      a2.load(\"text\");\r\n      await context.sync();\r\n      const nw = a2.text.trim();\r\n      const exp2 = determineCorrectPreposition(nw);\r\n      if (exp2 && exp2 !== t) {\r\n        r.select();\r\n        await context.sync();\r\n        return;\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\n// ─────────────────────────────────────────────────\r\n// 3) Reject One: clear current highlight & go to next\r\n// ─────────────────────────────────────────────────\r\nexport async function rejectCurrentChange() {\r\n  await Word.run(async context => {\r\n    const sel = context.document.getSelection();\r\n    sel.font.highlightColor = null;\r\n    await context.sync();\r\n\r\n    // Find next mismatch just like in Accept One\r\n    const afterSel = sel.getRange(\"After\");\r\n    const ns = afterSel.search(\"s\", { matchWholeWord: true, matchCase: false });\r\n    const nz = afterSel.search(\"z\", { matchWholeWord: true, matchCase: false });\r\n    ns.load(\"items\"); nz.load(\"items\");\r\n    await context.sync();\r\n\r\n    for (const r of [...ns.items, ...nz.items]) {\r\n      const t = r.text.trim().toLowerCase();\r\n      if (t !== \"s\" && t !== \"z\") continue;\r\n      const a2 = r.getRange(\"After\").getNextTextRange([\" \", \"\\n\", \".\", \",\", \";\", \"?\", \"!\"], true);\r\n      a2.load(\"text\");\r\n      await context.sync();\r\n      const nw = a2.text.trim();\r\n      const exp2 = determineCorrectPreposition(nw);\r\n      if (exp2 && exp2 !== t) {\r\n        r.select();\r\n        await context.sync();\r\n        return;\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\n// ─────────────────────────────────────────────────\r\n// 4) Accept All: bulk replace everywhere\r\n// ─────────────────────────────────────────────────\r\nexport async function acceptAllChanges() {\r\n  await Word.run(async context => {\r\n    const opts = { matchWholeWord: true, matchCase: false };\r\n    const sRes = context.document.body.search(\"s\", opts);\r\n    const zRes = context.document.body.search(\"z\", opts);\r\n    sRes.load(\"items\"); zRes.load(\"items\");\r\n    await context.sync();\r\n\r\n    const all = [...sRes.items, ...zRes.items]\r\n      .filter(r => ['s','z'].includes(r.text.trim().toLowerCase()));\r\n\r\n    for (const r of all) {\r\n      const actual = r.text.trim().toLowerCase();\r\n      const after = r.getRange(\"After\")\r\n                     .getNextTextRange([\" \", \"\\n\", \".\", \",\", \";\", \"?\", \"!\"], true);\r\n      after.load(\"text\");\r\n      await context.sync();\r\n      const nextWord = after.text.trim();\r\n      const expected = determineCorrectPreposition(nextWord);\r\n      if (expected && expected !== actual) {\r\n        r.insertText(expected, Word.InsertLocation.replace);\r\n        r.font.highlightColor = null;\r\n        await context.sync();\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\n// ─────────────────────────────────────────────────\r\n// 5) Reject All: clear all highlights\r\n// ─────────────────────────────────────────────────\r\nexport async function rejectAllChanges() {\r\n  await Word.run(async context => {\r\n    const opts = { matchWholeWord: true, matchCase: false };\r\n    const sRes = context.document.body.search(\"s\", opts);\r\n    const zRes = context.document.body.search(\"z\", opts);\r\n    sRes.load(\"items\"); zRes.load(\"items\");\r\n    await context.sync();\r\n\r\n    const all = [...sRes.items, ...zRes.items];\r\n    all.forEach(r => r.font.highlightColor = null);\r\n    await context.sync();\r\n  });\r\n}\r\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n * See LICENSE in the project root for license information.\n */\n\n/* global document, Office */\n\nimport {\n  checkDocumentText,\n  acceptCurrentChange,\n  rejectCurrentChange,\n  acceptAllChanges,\n  rejectAllChanges\n} from \"../commands/preposition.js\";\n\nOffice.onReady(info => {\n  if (info.host === Office.HostType.Word) {\n    document.getElementById(\"checkTextButton\").onclick   = checkDocumentText;\n    document.getElementById(\"acceptChangeButton\").onclick = acceptCurrentChange;\n    document.getElementById(\"rejectChangeButton\").onclick = rejectCurrentChange;\n    document.getElementById(\"acceptAllButton\").onclick    = acceptAllChanges;\n    document.getElementById(\"rejectAllButton\").onclick    = rejectAllChanges;\n  }\n});\n"],"names":["NOTIF_ID","determineCorrectPreposition","word","m","normalize","match","c","toLowerCase","voiceless","Set","key","test","has","async","checkDocumentText","id","Office","NotificationMessages","deleteAsync","Word","run","prevS","context","document","body","search","matchWholeWord","matchCase","prevZ","load","sync","items","forEach","r","font","highlightColor","sRes","zRes","mismatches","txt","text","trim","after","getRange","getNextTextRange","nextWord","expected","push","length","select","addAsync","type","message","icon","showNotification","acceptCurrentChange","sel","getSelection","actual","insertText","InsertLocation","replace","afterSel","ns","nz","t","a2","exp2","rejectCurrentChange","acceptAllChanges","opts","all","filter","includes","rejectAllChanges","onReady","info","host","HostType","getElementById","onclick"],"sourceRoot":""}