{"version":3,"file":"taskpane.js","mappings":"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","sources":["webpack://office-addin-taskpane-js/./src/commands/preposition.js","webpack://office-addin-taskpane-js/./src/taskpane/taskpane.js"],"sourcesContent":["/* global Office, Word */\r\n\r\nlet state = {\r\n  errors: [],         // { range: Word.Range, suggestion: \"s\"|\"z\" }[]\r\n  currentIndex: 0,\r\n  isChecking: false\r\n};\r\n\r\nconst HIGHLIGHT_COLOR = \"#FFC0CB\";\r\nconst NOTIF_ID        = \"noErrors\";\r\n\r\nfunction clearNotification(id) {\r\n  if (Office.NotificationMessages && typeof Office.NotificationMessages.deleteAsync === \"function\") {\r\n    Office.NotificationMessages.deleteAsync(id);\r\n  }\r\n}\r\nfunction showNotification(id, options) {\r\n  if (Office.NotificationMessages && typeof Office.NotificationMessages.addAsync === \"function\") {\r\n    Office.NotificationMessages.addAsync(id, options);\r\n  }\r\n}\r\n\r\nfunction determineCorrectPreposition(rawWord) {\r\n  if (!rawWord) return null;\r\n  const match = rawWord.normalize(\"NFC\").match(/[\\p{L}0-9]/u);\r\n  if (!match) return null;\r\n  const first = match[0].toLowerCase();\r\n  const unvoiced = new Set(['c','č','f','h','k','p','s','š','t']);\r\n  const numMap   = {'1':'e','2':'d','3':'t','4':'š','5':'p','6':'š','7':'s','8':'o','9':'d','0':'n'};\r\n  return (/\\d/.test(first) ? unvoiced.has(numMap[first]) : unvoiced.has(first))\r\n    ? \"s\" : \"z\";\r\n}\r\n\r\n// ─────────────────────────────────────────────────\r\n// 1) Check S/Z: ALWAYS reset & rescan on each click\r\n// ─────────────────────────────────────────────────\r\nexport async function checkDocumentText() {\r\n  // **Reset** on every click:\r\n  clearNotification(NOTIF_ID);\r\n  state.errors.forEach(e => e.range.font.highlightColor = null);\r\n  state.errors = [];\r\n  state.currentIndex = 0;\r\n\r\n  if (state.isChecking) return;\r\n  state.isChecking = true;\r\n\r\n  try {\r\n    await Word.run(async context => {\r\n      // Clear previous highlights\r\n      state.errors.forEach(e => e.range.font.highlightColor = null);\r\n      state.errors = [];\r\n      state.currentIndex = 0;\r\n\r\n      const opts = { matchCase: false, matchWholeWord: true };\r\n      const sRes = context.document.body.search(\"s\", opts);\r\n      const zRes = context.document.body.search(\"z\", opts);\r\n      sRes.load(\"items\"); zRes.load(\"items\");\r\n      await context.sync();\r\n\r\n      const candidates = [...sRes.items, ...zRes.items]\r\n        .filter(r => [\"s\",\"z\"].includes(r.text.trim().toLowerCase()));\r\n\r\n      const errors = [];\r\n      for (const prep of candidates) {\r\n        const after = prep.getRange(\"After\");\r\n        const nxtR = after.getNextTextRange(\r\n          [\" \", \"\\n\", \".\", \",\", \";\", \"?\", \"!\"], \r\n          true\r\n        );\r\n        nxtR.load(\"text\");\r\n        await context.sync();\r\n\r\n        const nxt = nxtR.text.trim();\r\n        if (!nxt) continue;\r\n\r\n        const actual = prep.text.trim().toLowerCase();\r\n        const expect = determineCorrectPreposition(nxt);\r\n        if (expect && actual !== expect) {\r\n          errors.push({ range: prep, suggestion: expect });\r\n        }\r\n      }\r\n\r\n      state.errors = errors;\r\n\r\n      if (!errors.length) {\r\n        showNotification(NOTIF_ID, {\r\n          type: \"informationalMessage\",\r\n          message: \"✨ No 's'/'z' mismatches!\",\r\n          icon: \"Icon.80x80\",\r\n          persistent: false\r\n        });\r\n      } else {\r\n        errors.forEach(e => e.range.font.highlightColor = HIGHLIGHT_COLOR);\r\n        await context.sync();\r\n        errors[0].range.select();\r\n      }\r\n    });\r\n  } catch (e) {\r\n    console.error(\"checkDocumentText error\", e);\r\n    showNotification(\"checkError\", {\r\n      type: \"errorMessage\",\r\n      message: \"Check failed; please try again.\",\r\n      persistent: false\r\n    });\r\n  } finally {\r\n    state.isChecking = false;\r\n  }\r\n}\r\n\r\n// ─────────────────────────────────────────────────\r\n// 2) Accept One: replace current & auto-advance\r\n// ─────────────────────────────────────────────────\r\nexport async function acceptCurrentChange() {\r\n  if (state.currentIndex >= state.errors.length) return;\r\n\r\n  const err = state.errors[state.currentIndex];\r\n  try {\r\n    await Word.run(async context => {\r\n      context.trackedObjects.add(err.range);\r\n      err.range.insertText(err.suggestion, Word.InsertLocation.replace);\r\n      err.range.font.highlightColor = null;\r\n      await context.sync();\r\n\r\n      state.currentIndex++;\r\n      if (state.currentIndex < state.errors.length) {\r\n        state.errors[state.currentIndex].range.select();\r\n        await context.sync();\r\n      }\r\n    });\r\n  } catch (e) {\r\n    console.error(\"acceptCurrentChange error\", e);\r\n  }\r\n}\r\n\r\n// ─────────────────────────────────────────────────\r\n// 3) Reject One: clear current & auto-advance\r\n// ─────────────────────────────────────────────────\r\nexport async function rejectCurrentChange() {\r\n  if (state.currentIndex >= state.errors.length) return;\r\n\r\n  const err = state.errors[state.currentIndex];\r\n  try {\r\n    await Word.run(async context => {\r\n      context.trackedObjects.add(err.range);\r\n      err.range.font.highlightColor = null;\r\n      await context.sync();\r\n\r\n      state.currentIndex++;\r\n      if (state.currentIndex < state.errors.length) {\r\n        state.errors[state.currentIndex].range.select();\r\n        await context.sync();\r\n      }\r\n    });\r\n  } catch (e) {\r\n    console.error(\"rejectCurrentChange error\", e);\r\n  }\r\n}\r\n\r\n// ─────────────────────────────────────────────────\r\n// 4) Accept All: replace every mismatch at once\r\n// ─────────────────────────────────────────────────\r\nexport async function acceptAllChanges() {\r\n  if (!state.errors.length) return;\r\n  try {\r\n    await Word.run(async context => {\r\n      for (const err of state.errors) {\r\n        context.trackedObjects.add(err.range);\r\n        err.range.insertText(err.suggestion, Word.InsertLocation.replace);\r\n        err.range.font.highlightColor = null;\r\n      }\r\n      await context.sync();\r\n      state.errors = [];\r\n    });\r\n  } catch (e) {\r\n    console.error(\"acceptAllChanges error\", e);\r\n  }\r\n}\r\n\r\n// ─────────────────────────────────────────────────\r\n// 5) Reject All: clear all highlights at once\r\n// ─────────────────────────────────────────────────\r\nexport async function rejectAllChanges() {\r\n  if (!state.errors.length) return;\r\n  try {\r\n    await Word.run(async context => {\r\n      for (const err of state.errors) {\r\n        context.trackedObjects.add(err.range);\r\n        err.range.font.highlightColor = null;\r\n      }\r\n      await context.sync();\r\n      state.errors = [];\r\n    });\r\n  } catch (e) {\r\n    console.error(\"rejectAllChanges error\", e);\r\n  }\r\n}\r\n\r\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n * See LICENSE in the project root for license information.\n */\n\n/* global document, Office */\n\nimport {\n  checkDocumentText,\n  acceptCurrentChange,\n  rejectCurrentChange,\n  acceptAllChanges,\n  rejectAllChanges\n} from \"../commands/preposition.js\";\n\nOffice.onReady(info => {\n  if (info.host === Office.HostType.Word) {\n    document.getElementById(\"checkTextButton\").onclick   = checkDocumentText;\n    document.getElementById(\"acceptChangeButton\").onclick = acceptCurrentChange;\n    document.getElementById(\"rejectChangeButton\").onclick = rejectCurrentChange;\n    document.getElementById(\"acceptAllButton\").onclick    = acceptAllChanges;\n    document.getElementById(\"rejectAllButton\").onclick    = rejectAllChanges;\n  }\n});\n"],"names":["state","errors","currentIndex","isChecking","NOTIF_ID","showNotification","id","options","Office","NotificationMessages","addAsync","determineCorrectPreposition","rawWord","match","normalize","first","toLowerCase","unvoiced","Set","test","has","async","checkDocumentText","deleteAsync","forEach","e","range","font","highlightColor","Word","run","opts","matchCase","matchWholeWord","sRes","context","document","body","search","zRes","load","sync","candidates","items","filter","r","includes","text","trim","prep","nxtR","getRange","getNextTextRange","nxt","actual","expect","push","suggestion","length","select","type","message","icon","persistent","console","error","acceptCurrentChange","err","trackedObjects","add","insertText","InsertLocation","replace","rejectCurrentChange","acceptAllChanges","rejectAllChanges","onReady","info","host","HostType","getElementById","onclick"],"sourceRoot":""}